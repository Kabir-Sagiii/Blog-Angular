{"version":3,"sources":["./src/app/effects/root.effects.ts","./src/app/users/actions/user.actions.ts","./src/app/developers/actions/developer.actions.ts","./src/app/posts/reducers/post.reducer.ts","./src/environments/environment.ts","./src/app/root/reducers/util.reducer.ts","./src/app/profiles/effects/profile.effects.ts","./src/app/developers/reducers/developer.reducer.ts","./src/app/profiles/actions/profile.actions.ts","./src/app/profiles/services/profile.service.ts","./src/app/reducers/index.ts","./src/app/root/interceptors/auth.interceptor.ts","./src/app/posts/effects/post.effects.ts","./src/app/users/effects/user.effects.ts","./src/app/developers/effects/developer.effects.ts","./src/app/root/util/alert/alert.component.ts","./src/app/root/util/alert/alert.component.html","./src/app/root/actions/util.actions.ts","./src/app/developers/services/developer.service.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/posts/services/post.service.ts","./src/app/profiles/reducers/profile.reducer.ts","./src/app/app.module.ts","./src/app/root/components/navbar/navbar.component.ts","./src/app/root/components/navbar/navbar.component.html","./src/app/posts/actions/post.actions.ts","./src/app/app-routing.module.ts","./src/app/root/components/home/home.component.ts","./src/app/root/components/home/home.component.html","./src/app/users/reducers/user.reducer.ts","./src/app/root/util/ErrorHandlerUtil.ts","./src/app/users/services/user.service.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { Actions, createEffect } from '@ngrx/effects';\n\n\n\n@Injectable()\nexport class RootEffects {\n\n\n\n  constructor(private actions$: Actions) {}\n\n}\n","import { createAction, props } from '@ngrx/store';\nimport {IUser} from \"../models/IUser\";\n\n// Register a User\nexport const registerUser = createAction(\n  '[User] register User',\n  props<{user : IUser}>()\n);\n\nexport const registerUserSuccess = createAction(\n  '[User] register User Success',\n  props<{ msg: string }>()\n);\n\nexport const registerUserFailure = createAction(\n  '[User] register User Failure',\n  props<{ error: string }>()\n);\n\n// Login a User\nexport const loginUser = createAction(\n  '[User] login User',\n  props<{user : IUser}>()\n);\n\nexport const loginUserSuccess = createAction(\n  '[User] login User Success',\n  props<{ msg: string , token : string }>()\n);\n\nexport const loginUserFailure = createAction(\n  '[User] login User Failure',\n  props<{ error: string }>()\n);\n\n// Get User Info\nexport const getUserInfo = createAction(\n  '[User] GET user Info'\n);\n\nexport const getUserInfoSuccess = createAction(\n  '[User] Get User Info Success',\n  props<{ user: IUser}>()\n);\n\nexport const getUserInfoFailure = createAction(\n  '[User] Get User Info Failure',\n  props<{ error: string }>()\n);\n\nexport const logOutUser = createAction(\n  '[User] LogOut User'\n);\n","import { createAction, props } from '@ngrx/store';\nimport {IDeveloper} from \"../models/IDeveloper\";\n\n// get all profiles\nexport const loadDevelopers = createAction(\n  '[Developer] Load Developers'\n);\n\nexport const loadDevelopersSuccess = createAction(\n  '[Developer] Load Developers Success',\n  props<{ developers: IDeveloper[] }>()\n);\n\nexport const loadDevelopersFailure = createAction(\n  '[Developer] Load Developers Failure',\n  props<{ error: string }>()\n);\n\n// load a developer\nexport const loadDeveloper = createAction(\n  '[Developer] Load Developer',\n  props<{developerId : string}>()\n);\n\nexport const loadDeveloperSuccess = createAction(\n  '[Developer] Load Developer Success',\n  props<{ developer: IDeveloper }>()\n);\n\nexport const loadDeveloperFailure = createAction(\n  '[Developer] Load Developer Failure',\n  props<{ error: string }>()\n);\n","import { Action, createReducer, on } from '@ngrx/store';\nimport {IPost} from \"../models/IPost\";\nimport * as postActions from '../actions/post.actions';\n\nexport const postFeatureKey = 'post';\n\nexport interface State {\n  loading : boolean,\n  posts : IPost[],\n  selectedPost : IPost,\n  errorMessage : string\n}\n\nexport const initialState: State = {\n  loading : false,\n  posts : [] as IPost[],\n  selectedPost : {} as IPost,\n  errorMessage : ''\n};\n\n\nexport const reducer = createReducer(\n  initialState,\n  // load all Posts\n  on(postActions.loadAllPosts, (state) => {\n    return {\n      ...state,\n      loading : true\n    }\n  }),\n  on(postActions.loadAllPostsSuccess, (state, {posts}) => {\n    return {\n      ...state,\n      loading : false,\n      posts : posts\n    }\n  }),\n  on(postActions.loadAllPostsFailure, (state, {error}) => {\n    return {\n      ...state,\n      loading : false,\n      errorMessage : error\n    }\n  }),\n  // Create Post\n  on(postActions.createPost, (state, {text}) => {\n    return {\n      ...state,\n      loading : true\n    }\n  }),\n  on(postActions.createPostSuccess, (state, {post}) => {\n    return {\n      ...state,\n      loading : false,\n      posts : [post , ...state.posts]\n    }\n  }),\n  on(postActions.createPostFailure, (state, {error}) => {\n    return {\n      ...state,\n      loading : false,\n      errorMessage : error\n    }\n  }),\n  // load a post\n  on(postActions.loadPost, (state, {postId}) => {\n    return {\n      ...state,\n      loading : true\n    }\n  }),\n  on(postActions.loadPostSuccess, (state, {post}) => {\n    return {\n      ...state,\n      loading : false,\n      selectedPost : post\n    }\n  }),\n  on(postActions.loadPostFailure, (state, {error}) => {\n    return {\n      ...state,\n      loading : false,\n      errorMessage : error\n    }\n  }),\n  // Create Comment\n  on(postActions.createComment, (state, {text, postId}) => {\n    return {\n      ...state,\n      loading : true\n    }\n  }),\n  on(postActions.createCommentSuccess, (state, {post}) => {\n    return {\n      ...state,\n      loading : false,\n      selectedPost : post\n    }\n  }),\n  on(postActions.createCommentFailure, (state, {error}) => {\n    return {\n      ...state,\n      loading : false,\n      errorMessage : error\n    }\n  }),\n  // delete Comment\n  on(postActions.deleteComment, (state , {postId , commentId}) => {\n    return {\n      ...state,\n      loading : true\n    }\n  }),\n  on(postActions.deleteCommentSuccess, (state , {post}) => {\n    return {\n      ...state,\n      loading : false,\n      selectedPost : post\n    }\n  }),\n  on(postActions.deleteCommentFailure, (state , {error}) => {\n    return {\n      ...state,\n      loading : false,\n      errorMessage : error\n    }\n  }),\n  // delete Post\n  on(postActions.deletePost, (state , {postId}) => {\n    return {\n      ...state,\n      loading : true\n    }\n  }),\n  on(postActions.deletePostSuccess, (state , {post}) => {\n    return {\n      ...state,\n      loading : false,\n      posts : state.posts.filter(selectedPost => selectedPost._id !== post._id)\n    }\n  }),\n  on(postActions.deletePostFailure, (state , {error}) => {\n    return {\n      ...state,\n      loading : false,\n      errorMessage : error\n    }\n  }),\n  // Like Post\n  on(postActions.likePost, (state , {postId}) => {\n    return {\n      ...state,\n      loading : false\n    }\n  }),\n  on(postActions.likePostSuccess, (state , {post}) => {\n    let likedPosts = state.posts.map(selectedPost => {\n      if(selectedPost._id === post._id){\n        return post;\n      }\n      return selectedPost;\n    })\n    return {\n      ...state,\n      loading : false,\n      posts : likedPosts\n    }\n  }),\n  on(postActions.likePostFailure, (state , {error}) => {\n    return {\n      ...state,\n      loading : false,\n      errorMessage : error\n    }\n  }),\n  // Un-Like Post\n  on(postActions.unlikePost, (state , {postId}) => {\n    return {\n      ...state,\n      loading : false\n    }\n  }),\n  on(postActions.unlikePostSuccess, (state , {post}) => {\n    let unLikedPosts = state.posts.map(selectedPost => {\n      if(selectedPost._id === post._id){\n        return post;\n      }\n      return selectedPost;\n    })\n    return {\n      ...state,\n      loading : false,\n      posts : unLikedPosts\n    }\n  }),\n  on(postActions.unlikePostFailure, (state , {error}) => {\n    return {\n      ...state,\n      loading : false,\n      errorMessage : error\n    }\n  }),\n);\n\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  //  apiURL : 'http://127.0.0.1:5000'\n  apiURL :\"\"\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Action, createReducer, on } from '@ngrx/store';\nimport * as utilActions from '../actions/util.actions';\n\nexport const utilFeatureKey = 'util';\n\nexport interface AlertMessage {\n    message : string,\n    color : string\n}\n\nexport interface State {\n  messages : AlertMessage[]\n}\n\nexport const initialState: State = {\n  messages : []\n};\n\n\nexport const reducer = createReducer(\n  initialState,\n  on(utilActions.setAlertUtils, (state , {message , color}) => {\n    return {\n      ...state,\n      messages : [...state.messages , {message , color}]\n    }\n  }),\n  on(utilActions.removeAlertUtils , (state) => {\n    return {\n      ...state,\n      messages : []\n    }\n  })\n);\n\n","import { Injectable } from '@angular/core';\nimport {Actions, createEffect, Effect, ofType} from '@ngrx/effects';\nimport * as profileActions from '../actions/profile.actions';\nimport {ProfileService} from \"../services/profile.service\";\nimport * as utilActions from '../../root/actions/util.actions';\nimport {catchError, concatMap, mergeMap, switchMap, tap} from \"rxjs/operators\";\nimport {of} from \"rxjs\";\nimport {Router} from \"@angular/router\";\nimport * as userActions from \"../../users/actions/user.actions\";\n\n@Injectable()\nexport class ProfileEffects {\n\n  constructor(private actions$: Actions,\n              private profileService : ProfileService,\n              private router : Router) {}\n\n  @Effect()\n  public loadProfile = this.actions$.pipe(ofType(profileActions.loadProfile),\n    mergeMap((action) => {\n      return this.profileService.loadProfile()\n        .pipe(\n          switchMap(({profile}) => [\n            profileActions.loadProfileSuccess({profile})\n          ]),\n          catchError(error => of(profileActions.loadProfileFailure(error)))\n        );\n    })\n  );\n\n  @Effect()\n  public deleteExperience = this.actions$.pipe(ofType(profileActions.deleteExperience),\n    concatMap((action) => {\n      return this.profileService.deleteExperience(action.experienceId)\n        .pipe(\n          switchMap(({profile}) => [\n            profileActions.deleteExperienceSuccess({profile})\n          ]),\n          catchError(error => of(profileActions.deleteExperienceFailure(error)))\n        );\n    })\n  );\n\n  @Effect()\n  public deleteEducation = this.actions$.pipe(ofType(profileActions.deleteEducation),\n    concatMap((action) => {\n      return this.profileService.deleteEducation(action.educationId)\n        .pipe(\n          switchMap(({profile}) => [\n            profileActions.deleteEducationSuccess({profile})\n          ]),\n          catchError(error => of(profileActions.deleteEducationFailure(error)))\n        );\n    })\n  );\n\n  @Effect()\n  public updateProfile = this.actions$.pipe(ofType(profileActions.updateProfile),\n    concatMap((action) => {\n      return this.profileService.updateProfile(action.profile)\n        .pipe(\n          switchMap(({profile}) => [\n            profileActions.updateProfileSuccess({profile}),\n            utilActions.setAlertUtils({message : 'Profile is Updated' , color : 'success'})\n          ]),\n          catchError(error => of(profileActions.updateProfileFailure(error)))\n        );\n    })\n  );\n\n  @Effect()\n  public createProfile = this.actions$.pipe(ofType(profileActions.createProfile),\n    concatMap((action) => {\n      return this.profileService.createProfile(action.profile)\n        .pipe(\n          switchMap(({profile}) => [\n            profileActions.createProfileSuccess({profile}),\n            utilActions.setAlertUtils({message : 'Profile is Created' , color : 'success'})\n          ]),\n          catchError(error => of(profileActions.createProfileFailure(error)))\n        );\n    })\n  );\n\n  @Effect()\n  public addExperience = this.actions$.pipe(ofType(profileActions.addExperience),\n    concatMap((action) => {\n      return this.profileService.addExperience(action.experience)\n        .pipe(\n          switchMap(({profile}) => [\n            profileActions.addExperienceSuccess({profile}),\n            utilActions.setAlertUtils({message : 'Experience is Added' , color : 'success'})\n          ]),\n          catchError(error => of(profileActions.addExperienceFailure(error)))\n        );\n    })\n  );\n\n  @Effect()\n  public addEducation = this.actions$.pipe(ofType(profileActions.addEducation),\n    concatMap((action) => {\n      return this.profileService.addEducation(action.education)\n        .pipe(\n          switchMap(({profile}) => [\n            profileActions.addEducationSuccess({profile}),\n            utilActions.setAlertUtils({message : 'Education is Added' , color : 'success'})\n          ]),\n          catchError(error => of(profileActions.addEducationFailure(error)))\n        );\n    })\n  );\n\n  // Routing / Redirection\n\n  // if update Profile is success, redirect to dashboard page\n  @Effect({ dispatch: false })\n  updateProfileSuccess$ = this.actions$.pipe(\n    ofType(profileActions.updateProfileSuccess),\n    tap(() => this.router.navigate(['/profiles/dashboard']))\n  );\n\n  // if Create Profile is success, redirect to dashboard page\n  @Effect({ dispatch: false })\n  createProfileSuccess$ = this.actions$.pipe(\n    ofType(profileActions.createProfileSuccess),\n    tap(() => this.router.navigate(['/profiles/dashboard']))\n  );\n\n  // if add Experience is success, redirect to dashboard page\n  @Effect({ dispatch: false })\n  addExperienceSuccess$ = this.actions$.pipe(\n    ofType(profileActions.addExperienceSuccess),\n    tap(() => this.router.navigate(['/profiles/dashboard']))\n  );\n\n  // if add Education is success, redirect to dashboard page\n  @Effect({ dispatch: false })\n  addEducationSuccess$ = this.actions$.pipe(\n    ofType(profileActions.addEducationSuccess),\n    tap(() => this.router.navigate(['/profiles/dashboard']))\n  );\n}\n","import { Action, createReducer, on } from '@ngrx/store';\nimport {IDeveloper} from \"../models/IDeveloper\";\nimport * as developerActions from '../actions/developer.actions';\n\nexport const developerFeatureKey = 'developer';\n\nexport interface State {\n  loading : boolean,\n  developers : IDeveloper[],\n  developer : IDeveloper,\n  errorMessage : string\n}\n\nexport const initialState: State = {\n  loading : false,\n  developers : [],\n  developer : {} as IDeveloper,\n  errorMessage : ''\n};\n\n\nexport const reducer = createReducer(\n  initialState,\n  // get all developers\n  on(developerActions.loadDevelopers, (state) => {\n    return {\n      ...state,\n      loading : true\n    }\n  }),\n  on(developerActions.loadDevelopersSuccess, (state, {developers}) => {\n    return {\n      ...state,\n      loading : false,\n      developers : developers\n    }\n  }),\n  on(developerActions.loadDevelopersFailure, (state, {error}) => {\n    return {\n      ...state,\n      loading : false,\n      errorMessage : error\n    }\n  }),\n  // get a developer\n  on(developerActions.loadDeveloper, (state, {developerId}) => {\n    return {\n      ...state,\n      loading : true\n    }\n  }),\n  on(developerActions.loadDeveloperSuccess, (state, {developer}) => {\n    return {\n      ...state,\n      loading : false,\n      developer : developer\n    }\n  }),\n  on(developerActions.loadDeveloperFailure, (state, {error}) => {\n    return {\n      ...state,\n      loading : false,\n      errorMessage : error\n    }\n  }),\n);\n\n","import { createAction, props } from '@ngrx/store';\nimport {Education, Experience, IProfile} from \"../models/IProfile\";\n\n// load Profile\nexport const loadProfile = createAction(\n  '[Profile] Load Profile'\n);\n\nexport const loadProfileSuccess = createAction(\n  '[Profile] Load Profile Success',\n  props<{ profile: IProfile }>()\n);\n\nexport const loadProfileFailure = createAction(\n  '[Profile] Load Profile Failure',\n  props<{ error: string }>()\n);\n\n// delete Experience\nexport const deleteExperience = createAction(\n  '[Profile] Delete Experience',\n  props<{experienceId : string}>()\n);\n\nexport const deleteExperienceSuccess = createAction(\n  '[Profile] Delete Experience Success',\n  props<{ profile: IProfile }>()\n);\n\nexport const deleteExperienceFailure = createAction(\n  '[Profile] Delete Experience Failure',\n  props<{ error: string }>()\n);\n\n// delete Education\nexport const deleteEducation = createAction(\n  '[Profile] Delete Education',\n  props<{educationId : string}>()\n);\n\nexport const deleteEducationSuccess = createAction(\n  '[Profile] Delete Education Success',\n  props<{ profile: IProfile }>()\n);\n\nexport const deleteEducationFailure = createAction(\n  '[Profile] Delete Education Failure',\n  props<{ error: string }>()\n);\n\n// Update Profile\nexport const updateProfile = createAction(\n  '[Profile] Update Profile',\n  props<{profile : IProfile}>()\n);\n\nexport const updateProfileSuccess = createAction(\n  '[Profile] Update Profile Success',\n  props<{ profile: IProfile }>()\n);\n\nexport const updateProfileFailure = createAction(\n  '[Profile] Update Profile Failure',\n  props<{ error: string }>()\n);\n\n// Add Experience\nexport const addExperience = createAction(\n  '[Profile] Add Experience',\n  props<{experience : Experience}>()\n);\n\nexport const addExperienceSuccess = createAction(\n  '[Profile] Add Experience Success',\n  props<{ profile: IProfile }>()\n);\n\nexport const addExperienceFailure = createAction(\n  '[Profile] Add Experience Failure',\n  props<{ error: string }>()\n);\n\n// Add Education\nexport const addEducation = createAction(\n  '[Profile] Add Education',\n  props<{education : Education}>()\n);\n\nexport const addEducationSuccess = createAction(\n  '[Profile] Add Education Success',\n  props<{ profile: IProfile }>()\n);\n\nexport const addEducationFailure = createAction(\n  '[Profile] Add Education Failure',\n  props<{ error: string }>()\n);\n\n// Clear Profile\nexport const clearProfile = createAction(\n  '[Profile] Clear Profile'\n);\n\n// create Profile\nexport const createProfile = createAction(\n  '[Profile] create Profile',\n  props<{profile : IProfile}>()\n);\n\nexport const createProfileSuccess = createAction(\n  '[Profile] create Profile Success',\n  props<{ profile: IProfile }>()\n);\n\nexport const createProfileFailure = createAction(\n  '[Profile] create Profile Failure',\n  props<{ error: string }>()\n);\n","import { Injectable } from '@angular/core';\nimport {HttpClient} from \"@angular/common/http\";\nimport {Observable} from \"rxjs\";\nimport {IDeveloper} from \"../../developers/models/IDeveloper\";\nimport {environment} from \"../../../environments/environment\";\nimport {catchError, retry} from \"rxjs/operators\";\nimport {ErrorHandlerUtil} from \"../../root/util/ErrorHandlerUtil\";\nimport {Education, Experience, IProfile} from \"../models/IProfile\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProfileService {\n\n  constructor(private httpClient:HttpClient) { }\n\n  // load a Profile\n  public loadProfile():Observable<{profile : IProfile}>{\n    let dataURL = `${environment.apiURL}/api/profiles/me`;\n    return this.httpClient.get<{profile : IProfile}>(dataURL).pipe(\n      retry(1),\n      catchError(ErrorHandlerUtil.handleError)\n    )\n  }\n\n  // Delete Experience\n  public deleteExperience(experienceId):Observable<{profile : IProfile}>{\n    let dataURL = `${environment.apiURL}/api/profiles/experience/${experienceId}`;\n    return this.httpClient.delete<{profile : IProfile}>(dataURL).pipe(\n      retry(1),\n      catchError(ErrorHandlerUtil.handleError)\n    )\n  }\n\n  // Delete Education\n  public deleteEducation(educationId):Observable<{profile : IProfile}>{\n    let dataURL = `${environment.apiURL}/api/profiles/education/${educationId}`;\n    return this.httpClient.delete<{profile : IProfile}>(dataURL).pipe(\n      retry(1),\n      catchError(ErrorHandlerUtil.handleError)\n    )\n  }\n\n  // Update Profile\n  public updateProfile(profile:IProfile):Observable<{profile : IProfile}>{\n    let dataURL = `${environment.apiURL}/api/profiles/`;\n    return this.httpClient.put<{profile : IProfile}>(dataURL , profile).pipe(\n      retry(1),\n      catchError(ErrorHandlerUtil.handleError)\n    )\n  }\n\n  // add Experience\n  public addExperience(experience:Experience):Observable<{profile : IProfile}>{\n    let dataURL = `${environment.apiURL}/api/profiles/experience`;\n    return this.httpClient.put<{profile : IProfile}>(dataURL , experience).pipe(\n      retry(1),\n      catchError(ErrorHandlerUtil.handleError)\n    )\n  }\n\n  // add Education\n  public addEducation(education:Education):Observable<{profile : IProfile}>{\n    let dataURL = `${environment.apiURL}/api/profiles/education`;\n    return this.httpClient.put<{profile : IProfile}>(dataURL , education).pipe(\n      retry(1),\n      catchError(ErrorHandlerUtil.handleError)\n    )\n  }\n\n  // Create Profile\n  public createProfile(profile:IProfile):Observable<{profile : IProfile}>{\n    let dataURL = `${environment.apiURL}/api/profiles/`;\n    return this.httpClient.post<{profile : IProfile}>(dataURL , profile).pipe(\n      retry(1),\n      catchError(ErrorHandlerUtil.handleError)\n    )\n  }\n}\n","import {\n  ActionReducer,\n  ActionReducerMap,\n  createFeatureSelector,\n  createSelector,\n  MetaReducer\n} from '@ngrx/store';\nimport { environment } from '../../environments/environment';\nimport * as utilReducer from '../../app/root/reducers/util.reducer';\nimport * as userReducer from '../../app/users/reducers/user.reducer';\nimport * as developerReducer from '../../app/developers/reducers/developer.reducer';\nimport * as profileReducer from '../../app/profiles/reducers/profile.reducer';\nimport * as postReducer from '../../app/posts/reducers/post.reducer';\n\nexport interface State {\n  [utilReducer.utilFeatureKey] : utilReducer.State,\n  [userReducer.userFeatureKey] : userReducer.State,\n  [developerReducer.developerFeatureKey] : developerReducer.State,\n  [profileReducer.profileFeatureKey] : profileReducer.State,\n  [postReducer.postFeatureKey] : postReducer.State\n}\n\nexport const reducers: ActionReducerMap<State> = {\n  [utilReducer.utilFeatureKey] : utilReducer.reducer,\n  [userReducer.userFeatureKey] : userReducer.reducer,\n  [developerReducer.developerFeatureKey] : developerReducer.reducer,\n  [profileReducer.profileFeatureKey] : profileReducer.reducer,\n  [postReducer.postFeatureKey] : postReducer.reducer\n};\n\nexport const metaReducers: MetaReducer<State>[] = !environment.production ? [] : [];\n","import { Injectable } from '@angular/core';\nimport {\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpInterceptor\n} from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport {UserService} from \"../../users/services/user.service\";\n\n@Injectable()\nexport class AuthInterceptor implements HttpInterceptor {\n\n  constructor(private userService:UserService) {}\n\n  intercept(request: HttpRequest<unknown>, next: HttpHandler): Observable<HttpEvent<unknown>> {\n    let tokenizedRequest = request.clone({\n      setHeaders : {\n        'x-auth-token' : `${this.userService.getToken()}`\n      }\n    });\n    return next.handle(tokenizedRequest);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {Actions, createEffect, Effect, ofType} from '@ngrx/effects';\nimport * as postActions from '../actions/post.actions';\nimport {PostService} from \"../services/post.service\";\nimport {Router} from \"@angular/router\";\nimport * as profileActions from \"../../profiles/actions/profile.actions\";\nimport {catchError, concatMap, mergeMap, switchMap} from \"rxjs/operators\";\nimport {of} from \"rxjs\";\n\n@Injectable()\nexport class PostEffects {\n\n  constructor(private actions$: Actions,\n              private postService : PostService,\n              private router : Router) {}\n\n  @Effect()\n  public loadAllPosts = this.actions$.pipe(ofType(postActions.loadAllPosts),\n    mergeMap((action) => {\n      return this.postService.loadAllPosts()\n        .pipe(\n          switchMap(({posts}) => [\n            postActions.loadAllPostsSuccess({posts})\n          ]),\n          catchError(error => of(postActions.loadAllPostsFailure(error)))\n        );\n    })\n  );\n\n  @Effect()\n  public loadPost = this.actions$.pipe(ofType(postActions.loadPost),\n    mergeMap((action) => {\n      return this.postService.loadPost(action.postId)\n        .pipe(\n          switchMap(({post}) => [\n            postActions.loadPostSuccess({post})\n          ]),\n          catchError(error => of(postActions.loadPostFailure(error)))\n        );\n    })\n  );\n\n  @Effect()\n  public createPost = this.actions$.pipe(ofType(postActions.createPost),\n    concatMap((action) => {\n      return this.postService.createPost(action.text)\n        .pipe(\n          switchMap(({post}) => [\n            postActions.createPostSuccess({post})\n          ]),\n          catchError(error => of(postActions.createPostFailure(error)))\n        );\n    })\n  );\n\n  @Effect()\n  public createComment = this.actions$.pipe(ofType(postActions.createComment),\n    concatMap((action) => {\n      return this.postService.createComment(action.text, action.postId)\n        .pipe(\n          switchMap(({post}) => [\n            postActions.createCommentSuccess({post})\n          ]),\n          catchError(error => of(postActions.createCommentFailure(error)))\n        );\n    })\n  );\n\n  @Effect()\n  public deleteComment = this.actions$.pipe(ofType(postActions.deleteComment),\n    concatMap((action) => {\n      return this.postService.deleteComment(action.postId, action.commentId)\n        .pipe(\n          switchMap(({post}) => [\n            postActions.deleteCommentSuccess({post})\n          ]),\n          catchError(error => of(postActions.deleteCommentFailure(error)))\n        );\n    })\n  );\n\n  @Effect()\n  public deletePost = this.actions$.pipe(ofType(postActions.deletePost),\n    concatMap((action) => {\n      return this.postService.deletePost(action.postId)\n        .pipe(\n          switchMap(({post}) => [\n            postActions.deletePostSuccess({post})\n          ]),\n          catchError(error => of(postActions.deletePostFailure(error)))\n        );\n    })\n  );\n\n  @Effect()\n  public likePost = this.actions$.pipe(ofType(postActions.likePost),\n    concatMap((action) => {\n      return this.postService.likePost(action.postId)\n        .pipe(\n          switchMap(({post}) => [\n            postActions.likePostSuccess({post})\n          ]),\n          catchError(error => of(postActions.likePostFailure(error)))\n        );\n    })\n  );\n\n  @Effect()\n  public unlikePost = this.actions$.pipe(ofType(postActions.unlikePost),\n    concatMap((action) => {\n      return this.postService.unlikePost(action.postId)\n        .pipe(\n          switchMap(({post}) => [\n            postActions.unlikePostSuccess({post})\n          ]),\n          catchError(error => of(postActions.unlikePostFailure(error)))\n        );\n    })\n  );\n}\n","import { Injectable } from '@angular/core';\nimport {Actions, createEffect, Effect, ofType} from '@ngrx/effects';\nimport * as userActions from '../../users/actions/user.actions';\nimport * as utilActions from '../../root/actions/util.actions';\nimport {catchError, concatMap, map, switchMap, tap} from \"rxjs/operators\";\nimport {UserService} from \"../services/user.service\";\nimport {Router} from \"@angular/router\";\nimport {of} from \"rxjs\";\nimport {ifTrue} from \"codelyzer/util/function\";\n\n@Injectable()\nexport class UserEffects {\n\n  constructor(private actions$: Actions,\n              private userService : UserService,\n              private router:Router) {}\n\n  /*@Effect()\n  public registerUser(){\n    return this.actions$.pipe(\n      ofType(userActions.registerUser),\n      concatMap((action) => this.userService.registerUser(action.user).pipe(\n        map(({msg}) => userActions.registerUserSuccess({msg})),\n        catchError((error) => of(userActions.registerUserFailure({error})))\n      ))\n    )\n  }*/\n\n  @Effect()\n  public registerUser = this.actions$.pipe(ofType(userActions.registerUser),\n    concatMap((action) => {\n      return this.userService.registerUser(action.user)\n        .pipe(\n          switchMap(({msg}) => [\n            userActions.registerUserSuccess({msg}),\n            utilActions.setAlertUtils({message : msg , color : 'success'})\n          ]),\n          catchError(error => of(userActions.registerUserFailure(error)))\n        );\n    })\n  );\n\n  @Effect()\n  public loginUser = this.actions$.pipe(ofType(userActions.loginUser),\n    concatMap((action) => {\n      return this.userService.loginUser(action.user)\n        .pipe(\n          switchMap(({msg, token}) => [\n            userActions.loginUserSuccess({msg , token}),\n            utilActions.setAlertUtils({message : msg , color : 'success'}),\n            userActions.getUserInfo()\n          ]),\n          catchError(error => of(userActions.loginUserFailure(error)))\n        );\n    })\n  );\n\n  @Effect()\n  public getUserInfo = this.actions$.pipe(ofType(userActions.getUserInfo),\n    concatMap((action) => {\n      return this.userService.getUserInfo()\n        .pipe(\n          switchMap(({user}) => [\n            userActions.getUserInfoSuccess({user})\n          ]),\n          catchError(error => of(userActions.getUserInfoFailure(error)))\n        );\n    })\n  );\n\n  // if registration is success, redirect to login page\n  @Effect({ dispatch: false })\n  registerUserSuccess$ = this.actions$.pipe(\n    ofType(userActions.registerUserSuccess),\n    tap(() => this.router.navigate(['/users/login']))\n  );\n\n  // if login is success, redirect to home page\n  @Effect({ dispatch: false })\n  loginUserSuccess$ = this.actions$.pipe(\n    ofType(userActions.loginUserSuccess),\n    tap(() => this.router.navigate(['/posts/list']))\n  );\n}\n","import { Injectable } from '@angular/core';\nimport {Actions, createEffect, Effect, ofType} from '@ngrx/effects';\nimport {DeveloperService} from \"../services/developer.service\";\nimport * as developerActions from '../actions/developer.actions';\nimport {catchError, concatMap, mergeMap, switchMap} from \"rxjs/operators\";\nimport {of} from \"rxjs\";\n\n@Injectable()\nexport class DeveloperEffects {\n\n  constructor(private actions$: Actions,\n              private developerService : DeveloperService) {}\n\n  @Effect()\n  public loadDevelopers = this.actions$.pipe(ofType(developerActions.loadDevelopers),\n    mergeMap((action) => {\n      return this.developerService.loadDevelopers()\n        .pipe(\n          switchMap(({developers}) => [\n            developerActions.loadDevelopersSuccess({developers})\n          ]),\n          catchError(error => of(developerActions.loadDevelopersFailure(error)))\n        );\n    })\n  );\n\n  @Effect()\n  public loadDeveloper = this.actions$.pipe(ofType(developerActions.loadDeveloper),\n    mergeMap((action) => {\n      return this.developerService.loadDeveloper(action.developerId)\n        .pipe(\n          switchMap(({developer}) => [\n            developerActions.loadDeveloperSuccess({developer})\n          ]),\n          catchError(error => of(developerActions.loadDeveloperFailure(error)))\n        );\n    })\n  );\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport {select, Store} from \"@ngrx/store\";\nimport {State} from \"../../../reducers\";\nimport * as utilReducer from '../../../root/reducers/util.reducer';\nimport {AlertMessage} from \"../../../root/reducers/util.reducer\";\n\n@Component({\n  selector: 'app-alert',\n  templateUrl: './alert.component.html',\n  styleUrls: ['./alert.component.css']\n})\nexport class AlertComponent implements OnInit {\n\n  public messages:AlertMessage[] = [] as AlertMessage[];\n\n  constructor(private store:Store<State>) { }\n\n  ngOnInit(): void {\n    this.store.pipe(select(utilReducer.utilFeatureKey)).subscribe((state) => {\n      this.messages = state.messages;\n    });\n\n  }\n\n}\n","<div *ngFor=\"let message of messages\" class=\"alert alert-dismissible fixed-top animated slideInDown m-2\"\n[class.alert-success]=\"message.color === 'success'\"\n[class.alert-danger]=\"message.color === 'danger'\">\n  <button class=\"close\" data-dismiss=\"alert\"><i class=\"fa fa-times-circle\"></i></button>\n  <small class=\"font-weight-bold\">{{message.message}}</small>\n</div>\n","import { createAction, props } from '@ngrx/store';\n\nexport const setAlertUtils = createAction(\n  '[Util] Set Alert Utils',\n  props<{message : string , color : string}>()\n);\n\nexport const removeAlertUtils = createAction(\n  '[Util] Remove Alert Utils'\n);\n\nexport const loadUtilsSuccess = createAction(\n  '[Util] Load Utils Success',\n  props<{ data: any }>()\n);\n\nexport const loadUtilsFailure = createAction(\n  '[Util] Load Utils Failure',\n  props<{ error: any }>()\n);\n","import { Injectable } from '@angular/core';\nimport {HttpClient} from \"@angular/common/http\";\nimport {Observable} from \"rxjs\";\nimport {IUser} from \"../../users/models/IUser\";\nimport {environment} from \"../../../environments/environment\";\nimport {catchError, retry} from \"rxjs/operators\";\nimport {ErrorHandlerUtil} from \"../../root/util/ErrorHandlerUtil\";\nimport {IDeveloper} from \"../models/IDeveloper\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DeveloperService {\n\n  constructor(private httpClient:HttpClient) { }\n\n  // load all Developers\n  public loadDevelopers():Observable<{developers : IDeveloper[]}>{\n    let dataURL = `${environment.apiURL}/api/profiles`;\n    return this.httpClient.get<{developers : IDeveloper[]}>(dataURL).pipe(\n      retry(1),\n      catchError(ErrorHandlerUtil.handleError)\n    )\n  }\n\n  // load a Developer\n  public loadDeveloper(developerId):Observable<{developer : IDeveloper}>{\n    let dataURL = `${environment.apiURL}/api/profiles/users/${developerId}`;\n    return this.httpClient.get<{developer : IDeveloper}>(dataURL).pipe(\n      retry(1),\n      catchError(ErrorHandlerUtil.handleError)\n    )\n  }\n\n}\n","import {Component} from '@angular/core';\nimport {Store} from \"@ngrx/store\";\nimport {State} from \"./reducers\";\nimport {UserService} from \"./users/services/user.service\";\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent{\n  title = 'client';\n\n}\n","<app-alert></app-alert>\n<app-navbar></app-navbar>\n\n<router-outlet></router-outlet>\n","import { Injectable } from '@angular/core';\nimport {HttpClient} from \"@angular/common/http\";\nimport { environment } from \"../../../environments/environment\";\nimport {catchError, retry} from \"rxjs/operators\";\nimport {ErrorHandlerUtil} from \"../../root/util/ErrorHandlerUtil\";\nimport {Observable} from \"rxjs\";\nimport {IPost} from \"../models/IPost\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PostService {\n\n  constructor(private httpClient:HttpClient) { }\n\n  // load all Posts\n  public loadAllPosts():Observable<{posts : IPost[]}>{\n    let dataURL : string = `${environment.apiURL}/api/posts`;\n    return this.httpClient.get<{posts : IPost[]}>(dataURL).pipe(\n      retry(1),\n      catchError(ErrorHandlerUtil.handleError)\n    )\n  }\n\n  // load Post\n  public loadPost(postId:string):Observable<{post : IPost}>{\n    let dataURL : string = `${environment.apiURL}/api/posts/${postId}`;\n    return this.httpClient.get<{post : IPost}>(dataURL).pipe(\n      retry(1),\n      catchError(ErrorHandlerUtil.handleError)\n    )\n  }\n\n  // Create a Post\n  public createPost(text:string):Observable<{post : IPost}>{\n    let dataURL : string = `${environment.apiURL}/api/posts`;\n    return this.httpClient.post<{post : IPost}>(dataURL, {text : text}).pipe(\n      retry(1),\n      catchError(ErrorHandlerUtil.handleError)\n    )\n  }\n\n  // Create a Comment\n  public createComment(text:string, postId : string):Observable<{post : IPost}>{\n    let dataURL : string = `${environment.apiURL}/api/posts/comment/${postId}`;\n    return this.httpClient.post<{post : IPost}>(dataURL, {text : text}).pipe(\n      retry(1),\n      catchError(ErrorHandlerUtil.handleError)\n    )\n  }\n\n  // Delete Comment\n  public deleteComment(postId : string, commentId:string):Observable<{post : IPost}>{\n    let dataURL : string = `${environment.apiURL}/api/posts/comment/${postId}/${commentId}`;\n    return this.httpClient.delete<{post : IPost}>(dataURL).pipe(\n      retry(1),\n      catchError(ErrorHandlerUtil.handleError)\n    )\n  }\n\n  // Delete Post\n  public deletePost(postId : string):Observable<{post : IPost}>{\n    let dataURL : string = `${environment.apiURL}/api/posts/${postId}`;\n    return this.httpClient.delete<{post : IPost}>(dataURL).pipe(\n      retry(1),\n      catchError(ErrorHandlerUtil.handleError)\n    )\n  }\n\n  // Like Post\n  public likePost(postId : string):Observable<{post : IPost}>{\n    let dataURL : string = `${environment.apiURL}/api/posts/like/${postId}`;\n    return this.httpClient.put<{post : IPost}>(dataURL, postId).pipe(\n      retry(1),\n      catchError(ErrorHandlerUtil.handleError)\n    )\n  }\n\n  // Un-Like Post\n  public unlikePost(postId : string):Observable<{post : IPost}>{\n    let dataURL : string = `${environment.apiURL}/api/posts/unlike/${postId}`;\n    return this.httpClient.put<{post : IPost}>(dataURL, postId).pipe(\n      retry(1),\n      catchError(ErrorHandlerUtil.handleError)\n    )\n  }\n}\n","import { Action, createReducer, on } from '@ngrx/store';\nimport * as profileActions from '../actions/profile.actions';\nimport {IProfile} from \"../models/IProfile\";\n\nexport const profileFeatureKey = 'profile';\n\nexport interface State {\n  loading : boolean,\n  profile : IProfile,\n  errorMessage : string\n}\n\nexport const initialState: State = {\n  loading : false,\n  profile : {} as IProfile,\n  errorMessage : ''\n};\n\n\nexport const reducer = createReducer(\n  initialState,\n  // load Profile\n  on(profileActions.loadProfile, (state) => {\n    return {\n      ...state,\n      loading : true\n    }\n  }),\n  on(profileActions.loadProfileSuccess, (state, {profile}) => {\n    return {\n      ...state,\n      loading : false,\n      profile : profile\n    }\n  }),\n  on(profileActions.loadProfileFailure, (state, {error}) => {\n    return {\n      ...state,\n      loading : false,\n      errorMessage : error\n    }\n  }),\n  // delete Experience\n  on(profileActions.deleteExperience, (state , {experienceId}) => {\n    return {\n      ...state,\n      loading : true\n    }\n  }),\n  on(profileActions.deleteExperienceSuccess, (state , {profile}) => {\n    return {\n      ...state,\n      loading : false,\n      profile : profile\n    }\n  }),\n  on(profileActions.deleteExperienceFailure, (state , {error}) => {\n    return {\n      ...state,\n      loading : false,\n      errorMessage : error\n    }\n  }),\n  // delete Education\n  on(profileActions.deleteEducation, (state , {educationId}) => {\n    return {\n      ...state,\n      loading : true\n    }\n  }),\n  on(profileActions.deleteEducationSuccess, (state , {profile}) => {\n    return {\n      ...state,\n      loading : false,\n      profile : profile\n    }\n  }),\n  on(profileActions.deleteEducationFailure, (state , {error}) => {\n    return {\n      ...state,\n      loading : false,\n      errorMessage : error\n    }\n  }),\n  // update Profile\n  on(profileActions.updateProfile, (state , {profile}) => {\n    return {\n      ...state,\n      loading : true\n    }\n  }),\n  on(profileActions.updateProfileSuccess, (state , {profile}) => {\n    return {\n      ...state,\n      loading : false,\n      profile : profile\n    }\n  }),\n  on(profileActions.updateProfileFailure, (state , {error}) => {\n    return {\n      ...state,\n      loading : false,\n      errorMessage : error\n    }\n  }),\n  // add Experience\n  on(profileActions.addExperience, (state , {experience}) => {\n    return {\n      ...state,\n      loading : true\n    };\n  }),\n  on(profileActions.addExperienceSuccess, (state , {profile}) => {\n    return {\n      ...state,\n      loading : false,\n      profile : profile\n    };\n  }),\n  on(profileActions.addExperienceFailure, (state , {error}) => {\n    return {\n      ...state,\n      loading : false,\n      errorMessage : error\n    };\n  }),\n  // add Education\n  on(profileActions.addEducation, (state , {education}) => {\n    return {\n      ...state,\n      loading : true\n    };\n  }),\n  on(profileActions.addEducationSuccess, (state , {profile}) => {\n    return {\n      ...state,\n      loading : false,\n      profile : profile\n    };\n  }),\n  on(profileActions.addEducationFailure, (state , {error}) => {\n    return {\n      ...state,\n      loading : false,\n      errorMessage : error\n    };\n  }),\n  // clear Profile\n  on(profileActions.clearProfile, (state) => {\n    return {\n      ...state,\n      profile : {} as IProfile,\n    }\n  }),\n  // Create Profile\n  on(profileActions.createProfile, (state , {profile}) => {\n    return {\n      ...state,\n      loading : true\n    }\n  }),\n  on(profileActions.createProfileSuccess, (state , {profile}) => {\n    return {\n      ...state,\n      loading : false,\n      profile : profile\n    }\n  }),\n  on(profileActions.createProfileFailure, (state , {error}) => {\n    return {\n      ...state,\n      loading : false,\n      errorMessage : error\n    }\n  }),\n\n);\n\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { StoreModule } from '@ngrx/store';\nimport { reducers, metaReducers } from './reducers';\nimport { StoreDevtoolsModule } from '@ngrx/store-devtools';\nimport { environment } from '../environments/environment';\nimport { EffectsModule } from '@ngrx/effects';\nimport { RootEffects } from './effects/root.effects';\nimport {DeveloperEffects} from \"./developers/effects/developer.effects\";\nimport {UserEffects} from \"./users/effects/user.effects\";\nimport {ProfileEffects} from \"./profiles/effects/profile.effects\";\nimport {PostEffects} from \"./posts/effects/post.effects\";\nimport { NavbarComponent } from './root/components/navbar/navbar.component';\nimport { HomeComponent } from './root/components/home/home.component';\nimport { AlertComponent } from './root/util/alert/alert.component';\nimport {HTTP_INTERCEPTORS, HttpClientModule} from \"@angular/common/http\";\nimport {AuthInterceptor} from \"./root/interceptors/auth.interceptor\";\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavbarComponent,\n    HomeComponent,\n    AlertComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    StoreModule.forRoot(reducers, { metaReducers }),\n    !environment.production ? StoreDevtoolsModule.instrument() : [],\n    EffectsModule.forRoot([RootEffects , DeveloperEffects , UserEffects , ProfileEffects , PostEffects])\n  ],\n  providers: [\n    {\n      provide : HTTP_INTERCEPTORS,\n      useClass : AuthInterceptor,\n      multi : true\n    }\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport {select, Store} from \"@ngrx/store\";\nimport {State} from \"../../../reducers\";\nimport * as userActions from '../../../users/actions/user.actions';\nimport * as profileActions from '../../../profiles/actions/profile.actions';\nimport * as userReducer from '../../../users/reducers/user.reducer';\nimport {IUser} from \"../../../users/models/IUser\";\nimport {UserService} from \"../../../users/services/user.service\";\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n\n  public user:IUser = {} as IUser;\n  constructor(private store:Store<State>,\n              private userService:UserService) { }\n\n  ngOnInit(): void {\n    if(this.userService.isLoggedIn()){\n      this.store.dispatch(userActions.getUserInfo());\n\n      // get user info from the store\n      this.store.pipe(select(userReducer.userFeatureKey)).subscribe((state) => {\n        this.user = state.user;\n      });\n    }\n  }\n\n  public hasUser():boolean{\n    return Object.keys(this.user).length > 0;\n  }\n\n  public loggedInUser(){\n    return this.userService.isLoggedIn();\n  }\n\n  public clickLogOut(){\n    this.store.dispatch(profileActions.clearProfile());\n    this.store.dispatch(userActions.logOutUser());\n  }\n\n}\n","<nav class=\"navbar navbar-dark bg-dark navbar-expand-sm\">\n  <div class=\"container\">\n    <a routerLink=\"/\" class=\"navbar-brand\">\n      <i class=\"fa fa-code\"></i>  Social App\n    </a>\n    <div class=\"collapse navbar-collapse\">\n      <ul class=\"navbar-nav\">\n        <li class=\"nav-item\">\n          <!-- <a routerLink=\"/developers/list\" class=\"nav-link\">\n            <i class=\"fa fa-user-tie\"></i> Developers\n          </a> -->\n        </li>\n      </ul>\n      <ul class=\"navbar-nav ml-auto\">\n        <!-- <li class=\"nav-item\" *ngIf=\"loggedInUser()\">\n          <a routerLink=\"/posts/list\" class=\"nav-link\">\n            <i class=\"fa fa-list\"></i> Posts</a>\n        </li>\n        <li class=\"nav-item\" *ngIf=\"loggedInUser()\">\n          <a routerLink=\"/profiles/dashboard\" class=\"nav-link\">\n           <i class=\"fa fa-sitemap\"></i> Dashboard</a>\n        </li> -->\n        <li class=\"nav-item\" *ngIf=\"!loggedInUser()\">\n          <a routerLink=\"/users/register\" class=\"nav-link\">Register</a>\n        </li>\n        <li class=\"nav-item\" *ngIf=\"!loggedInUser()\">\n          <a routerLink=\"/users/login\" class=\"nav-link\">Login</a>\n        </li>\n        <!-- <li class=\"nav-item\" *ngIf=\"loggedInUser() && hasUser()\">\n          <a routerLink=\"/\" class=\"nav-link\">\n            <img [src]=\"user.avatar\" alt=\"\" width=\"25\" height=\"25\" class=\"rounded-circle\"></a>\n        </li> -->\n        <li class=\"nav-item\" *ngIf=\"loggedInUser()\">\n          <a routerLink=\"/\" class=\"nav-link\" (click)=\"clickLogOut()\">\n           <i class=\"fa fa-sign-out-alt\"></i> LogOut</a>\n        </li>\n      </ul>\n    </div>\n  </div>\n</nav>\n","import { createAction, props } from '@ngrx/store';\nimport {IPost} from \"../models/IPost\";\n\n// to load all posts\nexport const loadAllPosts = createAction(\n  '[Post] Load All Posts'\n);\n\nexport const loadAllPostsSuccess = createAction(\n  '[Post] Load All Posts Success',\n  props<{ posts: IPost[] }>()\n);\n\nexport const loadAllPostsFailure = createAction(\n  '[Post] Load All Posts Failure',\n  props<{ error: string }>()\n);\n\n// Create Post\nexport const createPost = createAction(\n  '[Post] Create Post',\n  props<{text : string}>()\n);\n\nexport const createPostSuccess = createAction(\n  '[Post] Create Post Success',\n  props<{ post: IPost }>()\n);\n\nexport const createPostFailure = createAction(\n  '[Post] Create Post Failure',\n  props<{ error: string }>()\n);\n\n// load a post\nexport const loadPost = createAction(\n  '[Post] Load Post',\n  props<{postId :string }>()\n);\n\nexport const loadPostSuccess = createAction(\n  '[Post] Load Post Success',\n  props<{ post: IPost }>()\n);\n\nexport const loadPostFailure = createAction(\n  '[Post] Load Post Failure',\n  props<{ error: string }>()\n);\n\n// Create Comment\nexport const createComment = createAction(\n  '[Post] Create Comment',\n  props<{text : string , postId : string}>()\n);\n\nexport const createCommentSuccess = createAction(\n  '[Post] Create Comment Success',\n  props<{ post: IPost }>()\n);\n\nexport const createCommentFailure = createAction(\n  '[Post] Create Comment Failure',\n  props<{ error: string }>()\n);\n\n// delete Comment\nexport const deleteComment = createAction(\n  '[Post] delete Comment',\n  props<{postId : string , commentId : string}>()\n);\n\nexport const deleteCommentSuccess = createAction(\n  '[Post] delete Comment Success',\n  props<{ post: IPost }>()\n);\n\nexport const deleteCommentFailure = createAction(\n  '[Post] delete Comment Failure',\n  props<{ error: string }>()\n);\n\n// delete Post\nexport const deletePost = createAction(\n  '[Post] delete Post',\n  props<{postId : string}>()\n);\n\nexport const deletePostSuccess = createAction(\n  '[Post] delete Post Success',\n  props<{ post: IPost }>()\n);\n\nexport const deletePostFailure = createAction(\n  '[Post] delete Post Failure',\n  props<{ error: string }>()\n);\n\n// like Post\nexport const likePost = createAction(\n  '[Post] like Post',\n  props<{postId : string}>()\n);\n\nexport const likePostSuccess = createAction(\n  '[Post] like Post Success',\n  props<{ post: IPost }>()\n);\n\nexport const likePostFailure = createAction(\n  '[Post] like Post Failure',\n  props<{ error: string }>()\n);\n\n// unlike Post\nexport const unlikePost = createAction(\n  '[Post] unlike Post',\n  props<{postId : string}>()\n);\n\nexport const unlikePostSuccess = createAction(\n  '[Post] unlike Post Success',\n  props<{ post: IPost }>()\n);\n\nexport const unlikePostFailure = createAction(\n  '[Post] unlike Post Failure',\n  props<{ error: string }>()\n);\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport {HomeComponent} from \"./root/components/home/home.component\";\n\nconst routes: Routes = [\n  {path : '' , component: HomeComponent},\n  { path: 'developers', loadChildren: () => import('./developers/developers.module').then(m => m.DevelopersModule) }, { path: 'posts', loadChildren: () => import('./posts/posts.module').then(m => m.PostsModule) }, { path: 'profiles', loadChildren: () => import('./profiles/profiles.module').then(m => m.ProfilesModule) }, { path: 'users', loadChildren: () => import('./users/users.module').then(m => m.UsersModule) }];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<section class=\"landing-page\">\n  <div class=\"wrapper\">\n    <div class=\"d-flex flex-column align-items-center justify-content-center text-center h-100\">\n      <h3 class=\"display-4\">The Social Media App</h3>\n      <p class=\"lead px-4\">A fun place for developers and friends to share ideas on technology.Plenty of cool discussions!</p>\n      <div>\n        <a routerLink=\"/users/register\" class=\"btn btn-light text-teal btn-sm\">register</a>\n        <a routerLink=\"/users/login\" class=\"btn btn-teal btn-sm\">Login</a>\n      </div>\n    </div>\n  </div>\n</section>\n","import { Action, createReducer, on } from '@ngrx/store';\nimport {IUser} from \"../models/IUser\";\nimport * as userActions from '../actions/user.actions';\n\nexport const userFeatureKey = 'user';\n\nexport interface State {\n  loading : boolean,\n  isAuthenticated : boolean,\n  token : string,\n  user : IUser,\n  errorMessage : string\n}\n\nexport const initialState: State = {\n  loading : false,\n  isAuthenticated : false,\n  token : '',\n  user : {} as IUser,\n  errorMessage : ''\n};\n\n\nexport const reducer = createReducer(\n  initialState,\n  // register a User\n  on(userActions.registerUser, (state , {user}) => {\n    return {\n      ...state,\n      loading : true\n    }\n  }),\n  on(userActions.registerUserSuccess, (state , {msg}) => {\n    return {\n      ...state,\n      loading : false\n    }\n  }),\n  on(userActions.registerUserFailure, (state , {error}) => {\n    return {\n      ...state,\n      loading : false,\n      errorMessage : error\n    }\n  }),\n  // Login a User\n  on(userActions.loginUser, (state , {user}) => {\n    return {\n      ...state,\n      loading : true\n    }\n  }),\n  on(userActions.loginUserSuccess, (state , {msg, token}) => {\n    localStorage.setItem('angular-social-token' , token);\n    return {\n      ...state,\n      loading : false,\n      token : token,\n      isAuthenticated : true\n    }\n  }),\n  on(userActions.loginUserFailure, (state , {error}) => {\n    localStorage.removeItem('angular-social-token');\n    return {\n      ...state,\n      loading : false,\n      token : '',\n      isAuthenticated : false,\n      user : {} as IUser,\n      errorMessage : error\n    }\n  }),\n  // Get User Info\n  on(userActions.getUserInfo, (state) => {\n    return {\n      ...state,\n      loading : true\n    }\n  }),\n  on(userActions.getUserInfoSuccess, (state, {user}) => {\n    return {\n      ...state,\n      loading : false,\n      user : user\n    }\n  }),\n  on(userActions.getUserInfoFailure, (state, {error}) => {\n    return {\n      ...state,\n      loading : false,\n      user : {} as IUser,\n      errorMessage : error\n    }\n  }),\n  on(userActions.logOutUser, (state) => {\n    localStorage.removeItem('angular-social-token');\n    return {\n      ...state,\n      loading : false,\n      token : '',\n      isAuthenticated : false,\n      user : {} as IUser\n    }\n  })\n);\n\n","import {HttpErrorResponse} from \"@angular/common/http\";\r\nimport {throwError} from \"rxjs\";\r\n\r\nexport class ErrorHandlerUtil {\r\n\r\n  public static handleError(error:HttpErrorResponse){\r\n    let errorMessage:string = '';\r\n    if(error.error instanceof ErrorEvent){\r\n      // client Error\r\n      errorMessage = `Error : ${error.error.message}`\r\n    }\r\n    else{\r\n      // server error\r\n      errorMessage = `Status : ${error.status} \\n Message: ${error.message}`;\r\n    }\r\n    return throwError(errorMessage);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\nimport {HttpClient} from \"@angular/common/http\";\nimport { environment } from \"../../../environments/environment\";\nimport {catchError, retry} from \"rxjs/operators\";\nimport {Observable} from \"rxjs\";\nimport {ErrorHandlerUtil} from \"../../root/util/ErrorHandlerUtil\";\nimport {IUser} from \"../models/IUser\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n\n  constructor(private httpClient:HttpClient) { }\n\n  // register\n  public registerUser(user:IUser):Observable<{msg : string}>{\n    let dataURL = `${environment.apiURL}/api/users/register`;\n    return this.httpClient.post<{msg : string}>(dataURL, user).pipe(\n      retry(1),\n      catchError(ErrorHandlerUtil.handleError)\n    )\n  }\n\n  // login\n  public loginUser(user:IUser):Observable<{msg : string , token : string}>{\n    let dataURL = `${environment.apiURL}/api/users/login`;\n    return this.httpClient.post<{msg : string, token : string}>(dataURL, user).pipe(\n      retry(1),\n      catchError(ErrorHandlerUtil.handleError)\n    )\n  }\n\n  // get User Info\n  public getUserInfo():Observable<{user : IUser}>{\n    let dataURL = `${environment.apiURL}/api/users`;\n    return this.httpClient.get<{user : IUser}>(dataURL).pipe(\n      retry(1),\n      catchError(ErrorHandlerUtil.handleError)\n    )\n  }\n\n  // isLoggedIn\n  public isLoggedIn():boolean{\n    return !!localStorage.getItem('angular-social-token');\n  }\n\n  // get Token\n  public getToken():string{\n    return localStorage.getItem('angular-social-token');\n  }\n\n}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}