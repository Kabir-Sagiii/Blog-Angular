{"version":3,"sources":["./src/app/posts/posts.module.ts","./src/app/posts/posts.component.ts","./src/app/posts/posts.component.html","./src/app/posts/components/post-list/post-list.component.ts","./src/app/posts/components/post-list/post-list.component.html","./src/app/posts/reducers/index.ts","./src/app/posts/components/comments/comments.component.ts","./src/app/posts/components/comments/comments.component.html","./src/app/posts/components/post-details/post-details.component.ts","./src/app/posts/components/post-details/post-details.component.html","./src/app/posts/posts-routing.module.ts"],"names":[],"mappings":"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","file":"posts-posts-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HttpClientModule } from \"@angular/common/http\";\nimport { FormsModule } from \"@angular/forms\";\nimport { PostsRoutingModule } from './posts-routing.module';\nimport { PostsComponent } from './posts.component';\nimport { CommentsComponent } from './components/comments/comments.component';\nimport { StoreModule } from '@ngrx/store';\nimport * as fromState from './reducers';\nimport { EffectsModule } from '@ngrx/effects';\nimport { PostEffects } from './effects/post.effects';\nimport { PostListComponent } from './components/post-list/post-list.component';\nimport { PostDetailsComponent } from './components/post-details/post-details.component';\n\n\n@NgModule({\n  declarations: [PostsComponent, CommentsComponent, PostListComponent, PostDetailsComponent],\n  imports: [\n    CommonModule,\n    FormsModule,\n    HttpClientModule,\n    PostsRoutingModule,\n    StoreModule.forFeature(fromState.stateFeatureKey, fromState.reducers, { metaReducers: fromState.metaReducers }),\n    EffectsModule.forFeature([PostEffects])\n  ]\n})\nexport class PostsModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-posts',\n  templateUrl: './posts.component.html',\n  styleUrls: ['./posts.component.css']\n})\nexport class PostsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>posts works!</p>\n","import { Component, OnInit } from '@angular/core';\nimport * as userReducer from '../../../users/reducers/user.reducer';\nimport * as postActions from '../../../posts/actions/post.actions';\nimport * as postReducer from '../../../posts/reducers/post.reducer';\nimport {select, Store} from \"@ngrx/store\";\nimport {State} from \"../../../reducers\";\nimport {IUser} from \"../../../users/models/IUser\";\nimport {IPost} from \"../../models/IPost\";\n\n@Component({\n  selector: 'app-post-list',\n  templateUrl: './post-list.component.html',\n  styleUrls: ['./post-list.component.css']\n})\nexport class PostListComponent implements OnInit {\n\n  public text:string = '';\n  public user:IUser = {} as IUser;\n  public posts:IPost[] = [] as IPost[];\n  public loading:boolean;\n  constructor(private store:Store<State>) { }\n\n  ngOnInit(): void {\n    // load All Posts\n    this.store.dispatch(postActions.loadAllPosts());\n\n    // get user info from NgRx Store\n    this.store.pipe(select(userReducer.userFeatureKey)).subscribe((state) => {\n      this.user = state.user;\n    });\n\n    // get all post Info from NgRx Store\n    this.store.pipe(select(postReducer.postFeatureKey)).subscribe((state) => {\n      this.posts = state.posts;\n      this.loading = state.loading;\n    });\n  }\n\n  public hasUser(){\n    return Object.keys(this.user).length > 0;\n  }\n\n  public isAuthUser(post:IPost){\n    return this.user._id.toString() === post.user;\n  }\n\n  public submitCreatePost(){\n    this.store.dispatch(postActions.createPost({text : this.text}));\n    this.text = '';\n  }\n\n  public clickDeletePost(postId){\n    this.store.dispatch(postActions.deletePost({postId : postId}));\n  }\n\n  public clickLikePost(postId){\n    this.store.dispatch(postActions.likePost({postId : postId}));\n  }\n\n  public clickUnlikePost(postId){\n    this.store.dispatch(postActions.unlikePost({postId : postId}));\n  }\n\n}\n","<section class=\"p-3\">\n  <div class=\"container\">\n    <div class=\"row\">\n      <div class=\"col\">\n        <p class=\"h3 text-teal\">Welcome to a thriving tech community!</p>\n       \n        <p>\n          Discuss the Latest on Technology and trends. Be civil and supportive.\n        </p>\n      </div>\n    </div>\n  </div>\n</section>\n\n<!-- Create New Post -->\n<section *ngIf=\"hasUser()\">\n  <div class=\"container\">\n    <div class=\"row\">\n      <div class=\"col\">\n        <form (submit)=\"submitCreatePost()\">\n          <div class=\"input-group mb-3\">\n            <div class=\"input-group-prepend\">\n              <span class=\"input-group-text\" id=\"basic-addon1\">\n                <img [src]=\"user.avatar\" alt=\"\" class=\"img-thumbnail rounded-circle\" width=\"60\" height=\"60\">\n              </span>\n            </div>\n            <textarea\n              name=\"text\"\n              [(ngModel)]=\"text\"\n              rows=\"3\" class=\"form-control\" placeholder=\"What's on your mind?\"></textarea>\n          </div>\n          <div>\n            <input type=\"submit\" class=\"btn btn-teal btn-sm\" value=\"Post\">\n          </div>\n        </form>\n      </div>\n    </div>\n  </div>\n</section>\n\n<!-- List all Posts -->\n<section class=\"p-3\">\n  <div class=\"container\">\n    <div class=\"row\">\n      <div class=\"col\">\n        <div class=\"card my-2\" *ngFor=\"let post of posts\">\n          <div class=\"card-body bg-light-grey\">\n            <div class=\"row\">\n              <div class=\"col-md-2 text-center\">\n                <img [src]=\"post.avatar\" alt=\"\" class=\"rounded-circle\" width=\"75\" height=\"75\"><br>\n                <small class=\"font-weight-bold\">{{post.name}}</small>\n              </div>\n              <div class=\"col-md-8\">\n                <small class=\"h6\">{{post.text}}</small><br>\n                <small>{{post.createdAt | date : 'dd-MM-yyyy'}}</small><br>\n                <button class=\"btn rgba-green-strong btn-sm\" (click)=\"clickLikePost(post._id)\">\n                  <i class=\"fa fa-thumbs-up\"></i> {{post.likes.length}}\n                </button>\n                <button class=\"btn rgba-red-strong btn-sm\" (click)=\"clickUnlikePost(post._id)\">\n                  <i class=\"fa fa-thumbs-down\"></i>\n                </button>\n                <a routerLink=\"/posts/{{post._id}}\" class=\"btn rgba-blue-strong btn-sm\">\n                  <i class=\"fab fa-facebook-messenger\"></i> Discussions {{post.comments.length}}\n                </a>\n                <button class=\"btn rgba-red-strong btn-sm\" *ngIf=\"isAuthUser(post)\" (click)=\"clickDeletePost(post._id)\">\n                  <i class=\"fa fa-times\"></i>\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</section>\n","import {\n  ActionReducer,\n  ActionReducerMap,\n  createFeatureSelector,\n  createSelector,\n  MetaReducer\n} from '@ngrx/store';\nimport { environment } from '../../../environments/environment';\n\nexport const stateFeatureKey = 'state';\n\nexport interface State {\n\n}\n\nexport const reducers: ActionReducerMap<State> = {\n\n};\n\n\nexport const metaReducers: MetaReducer<State>[] = !environment.production ? [] : [];\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-comments',\n  templateUrl: './comments.component.html',\n  styleUrls: ['./comments.component.css']\n})\nexport class CommentsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>comments works!</p>\n","import { Component, OnInit } from '@angular/core';\nimport {ActivatedRoute, ParamMap} from \"@angular/router\";\nimport {select, Store} from \"@ngrx/store\";\nimport {State} from \"../../../reducers\";\nimport * as postActions from '../../actions/post.actions';\nimport * as postReducer from '../../reducers/post.reducer';\nimport * as userReducer from '../../../users/reducers/user.reducer';\nimport {IComment, IPost} from \"../../models/IPost\";\nimport {IUser} from \"../../../users/models/IUser\";\n\n@Component({\n  selector: 'app-post-details',\n  templateUrl: './post-details.component.html',\n  styleUrls: ['./post-details.component.css']\n})\nexport class PostDetailsComponent implements OnInit {\n\n  public text:string = '';\n  public postId:string = '';\n  public user:IUser = {} as IUser;\n  public selectedPost:IPost = {} as IPost;\n  public loading:boolean;\n  constructor(private store:Store<State>,\n              private activatedRoute:ActivatedRoute) { }\n\n  ngOnInit(): void {\n    // get user info from NgRx Store\n    this.store.pipe(select(userReducer.userFeatureKey)).subscribe((state) => {\n      this.user = state.user;\n    });\n\n    // get post id from url\n    this.activatedRoute.paramMap.subscribe((param:ParamMap) => {\n      this.postId = param.get('postId');\n    });\n\n    // load post from server\n    this.store.dispatch(postActions.loadPost({postId : this.postId}));\n\n    // Get the Post Info from NgRx Store\n    this.store.pipe(select(postReducer.postFeatureKey)).subscribe((state) => {\n      this.selectedPost = state.selectedPost;\n      this.loading = state.loading;\n    });\n  }\n\n  public hasPost(){\n    return Object.keys(this.selectedPost).length > 0;\n  }\n\n  public hasUser(){\n    return Object.keys(this.user).length > 0;\n  }\n\n  public submitCreateComment(){\n    this.store.dispatch(postActions.createComment({text : this.text , postId : this.postId}))\n    this.text = \"\";\n  }\n\n  public isAuthUser(comment : IComment){\n    return this.user._id === comment.user.toString()\n  }\n\n  public clickDeleteComment(commentId){\n    this.store.dispatch(postActions.deleteComment({postId : this.selectedPost._id , commentId : commentId}));\n  }\n\n}\n","<section class=\"p-3\">\n  <div class=\"container\">\n    <div class=\"row\">\n      <div class=\"col\">\n        <a routerLink=\"/posts/list\" class=\"btn btn-light btn-sm\">Back</a>\n      </div>\n    </div>\n  </div>\n</section>\n\n<section *ngIf=\"hasPost()\">\n  <div class=\"container\">\n    <div class=\"row\">\n      <div class=\"col\">\n        <div class=\"card\">\n          <div class=\"card-body bg-light-grey\">\n            <div class=\"row\">\n              <div class=\"col-md-2 text-center\">\n                <img [src]=\"selectedPost.avatar\" alt=\"\" class=\"rounded-circle\" width=\"70\" height=\"70\"><br>\n                <small class=\"font-weight-bold\">{{selectedPost.name}}</small>\n              </div>\n              <div class=\"col-md-8\">\n                <p>{{selectedPost.text}}</p>\n                <small>{{selectedPost.createdAt | date : 'dd-MM-yyyy'}}</small>\n              </div>\n            </div>\n            <!-- Create a Comment -->\n            <div class=\"container mt-3\" *ngIf=\"hasUser()\">\n              <div class=\"row\">\n                <div class=\"col\">\n                  <form (submit)=\"submitCreateComment()\">\n                    <div class=\"input-group mb-3\">\n                      <div class=\"input-group-prepend\">\n                        <span class=\"input-group-text\" id=\"basic-addon1\">\n                          <img [src]=\"user.avatar\"  alt=\"\" class=\"img-thumbnail rounded-circle\" width=\"60\" height=\"60\">\n                        </span>\n                      </div>\n                      <textarea\n                        name=\"text\"\n                        [(ngModel)]=\"text\"\n                        rows=\"3\" class=\"form-control\" placeholder=\"What's on your mind?\"></textarea>\n                    </div>\n                    <div>\n                      <input type=\"submit\" class=\"btn btn-teal btn-sm\" value=\"Comment\">\n                    </div>\n                  </form>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</section>\n\n<!-- display Comments -->\n<section class=\"p-3\" *ngIf=\"selectedPost?.comments.length > 0\">\n  <div class=\"container\">\n    <div class=\"row\">\n      <div class=\"col\">\n        <div class=\"card my-2\" *ngFor=\"let comment of selectedPost.comments\">\n          <div class=\"card-body\">\n            <div class=\"row\">\n              <div class=\"col-md-2\">\n                <img [src]=\"comment.avatar\" alt=\"\" class=\"rounded-circle\" width=\"60\" height=\"60\"><br>\n                <small class=\"font-weight-bold\">{{comment.name}}</small>\n              </div>\n              <div class=\"col-md-8\">\n                <p>{{comment.text}}</p>\n                <small>{{comment.date | date : 'dd-MM-yyyy'}}</small><br>\n                <button class=\"btn rgba-red-strong btn-sm\" *ngIf=\"isAuthUser(comment)\" (click)=\"clickDeleteComment(comment._id)\">\n                  <i class=\"fa fa-times\"></i>\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</section>\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { PostsComponent } from './posts.component';\nimport {PostListComponent} from \"./components/post-list/post-list.component\";\nimport {PostDetailsComponent} from \"./components/post-details/post-details.component\";\n\nconst routes: Routes = [\n  { path: '', component: PostsComponent },\n  { path: 'list', component: PostListComponent },\n  { path: ':postId', component: PostDetailsComponent },\n\n  ];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class PostsRoutingModule { }\n"],"sourceRoot":"webpack:///"}