{"version":3,"sources":["./src/app/profiles/profiles.component.ts","./src/app/profiles/profiles.component.html","./src/app/profiles/components/add-education/add-education.component.ts","./src/app/profiles/components/add-education/add-education.component.html","./src/app/profiles/profiles.module.ts","./src/app/profiles/components/add-experience/add-experience.component.ts","./src/app/profiles/components/add-experience/add-experience.component.html","./src/app/profiles/reducers/index.ts","./src/app/profiles/components/edit-profile/edit-profile.component.ts","./src/app/profiles/components/edit-profile/edit-profile.component.html","./src/app/profiles/profiles-routing.module.ts","./src/app/profiles/components/dashboard/dashboard.component.ts","./src/app/profiles/components/dashboard/dashboard.component.html","./src/app/profiles/components/create-profile/create-profile.component.ts","./src/app/profiles/components/create-profile/create-profile.component.html"],"names":[],"mappings":"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","file":"profiles-profiles-module.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-profiles',\n  templateUrl: './profiles.component.html',\n  styleUrls: ['./profiles.component.css']\n})\nexport class ProfilesComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>profiles works!</p>\n","import { Component, OnInit } from '@angular/core';\nimport {Education, Experience} from \"../../models/IProfile\";\nimport {Store} from \"@ngrx/store\";\nimport {State} from \"../../../reducers\";\nimport * as profileActions from \"../../actions/profile.actions\";\n\n@Component({\n  selector: 'app-add-education',\n  templateUrl: './add-education.component.html',\n  styleUrls: ['./add-education.component.css']\n})\nexport class AddEducationComponent implements OnInit {\n\n  public education:Education = {} as Education;\n\n  constructor(private store:Store<State>) { }\n\n  ngOnInit(): void {\n  }\n\n  public submitUpdateEducation(){\n    this.store.dispatch(profileActions.addEducation({education : this.education}));\n  }\n\n}\n","<section class=\"p-3\">\n  <div class=\"container\">\n    <div class=\"row\">\n      <div class=\"col\">\n        <p class=\"h3 text-teal\">\n          <i class=\"fa fa-graduation-cap\"></i> Add Education</p>\n        <p>Lorem ipsum dolor sit amet, consectetur adipisicing elit. Doloremque eos inventore molestiae numquam, odit quidem quod vero? Beatae cum dicta eius excepturi, exercitationem incidunt, minus nesciunt non quasi reiciendis, ullam!</p>\n      </div>\n    </div>\n  </div>\n</section>\n<section class=\"mb-5\">\n  <div class=\"container\">\n    <div class=\"row\">\n      <div class=\"col-md-8\">\n        <form (submit)=\"submitUpdateEducation()\">\n          <div class=\"input-group mb-3\">\n            <div class=\"input-group-prepend\">\n              <span class=\"input-group-text bg-light-grey text-teal\">School</span>\n            </div>\n            <input\n              name=\"school\"\n              [(ngModel)]=\"education.school\"\n              type=\"text\" class=\"form-control\">\n          </div>\n          <div class=\"input-group mb-3\">\n            <div class=\"input-group-prepend\">\n              <span class=\"input-group-text bg-light-grey text-teal\">Degree</span>\n            </div>\n            <input\n              name=\"degree\"\n              [(ngModel)]=\"education.degree\"\n              type=\"text\" class=\"form-control\">\n          </div>\n          <div class=\"input-group mb-3\">\n            <div class=\"input-group-prepend\">\n              <span class=\"input-group-text bg-light-grey text-teal\">Field Of Study</span>\n            </div>\n            <input\n              name=\"fieldOfStudy\"\n              [(ngModel)]=\"education.fieldOfStudy\"\n              type=\"text\" class=\"form-control\">\n          </div>\n          <div class=\"input-group mb-3\">\n            <div class=\"input-group-prepend\">\n              <span class=\"input-group-text bg-light-grey text-teal\">From</span>\n            </div>\n            <input\n              name=\"from\"\n              [(ngModel)]=\"education.from\"\n              type=\"date\" class=\"form-control\">\n          </div>\n          <div>\n            <div class=\"form-group form-check\">\n              <input\n                name=\"current\"\n                [(ngModel)]=\"education.current\"\n                type=\"checkbox\" class=\"form-check-input\" id=\"exampleCheck1\">\n              <label class=\"form-check-label\" for=\"exampleCheck1\">Current</label>\n            </div>\n          </div>\n          <div class=\"input-group mb-3\">\n            <div class=\"input-group-prepend\">\n              <span class=\"input-group-text bg-light-grey text-teal\">To</span>\n            </div>\n            <input\n              name=\"to\"\n              [(ngModel)]=\"education.to\"\n              type=\"date\" class=\"form-control\" [disabled]=\"education.current\">\n          </div>\n          <div class=\"input-group mb-3\">\n            <div class=\"input-group-prepend\">\n              <span class=\"input-group-text bg-light-grey text-teal\">Description</span>\n            </div>\n            <textarea\n              name=\"description\"\n              [(ngModel)]=\"education.description\"\n              rows=\"3\" class=\"form-control\"></textarea>\n          </div>\n          <div>\n            <input type=\"submit\" class=\"btn btn-teal btn-sm\" value=\"Update\">\n            <a routerLink=\"/profiles/dashboard\" class=\"btn bg-light-grey btn-sm text-dark\">back</a>\n          </div>\n        </form>\n      </div>\n    </div>\n  </div>\n</section>\n\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport {HttpClientModule} from \"@angular/common/http\";\nimport { ProfilesRoutingModule } from './profiles-routing.module';\nimport { ProfilesComponent } from './profiles.component';\nimport { DashboardComponent } from './components/dashboard/dashboard.component';\nimport { CreateProfileComponent } from './components/create-profile/create-profile.component';\nimport { EditProfileComponent } from './components/edit-profile/edit-profile.component';\nimport { AddEducationComponent } from './components/add-education/add-education.component';\nimport { AddExperienceComponent } from './components/add-experience/add-experience.component';\nimport { StoreModule } from '@ngrx/store';\nimport * as fromState from './reducers';\nimport { EffectsModule } from '@ngrx/effects';\nimport { ProfileEffects } from './effects/profile.effects';\nimport {FormsModule} from \"@angular/forms\";\n\n@NgModule({\n  declarations: [ProfilesComponent, DashboardComponent, CreateProfileComponent, EditProfileComponent, AddEducationComponent, AddExperienceComponent],\n  imports: [\n    CommonModule,\n    HttpClientModule,\n    FormsModule,\n    ProfilesRoutingModule,\n    StoreModule.forFeature(fromState.stateFeatureKey, fromState.reducers, { metaReducers: fromState.metaReducers }),\n    EffectsModule.forFeature([ProfileEffects])\n  ]\n})\nexport class ProfilesModule { }\n","import { Component, OnInit } from '@angular/core';\nimport {Experience, IProfile} from \"../../models/IProfile\";\nimport {Store} from \"@ngrx/store\";\nimport {State} from \"../../../reducers\";\nimport * as profileActions from '../../actions/profile.actions';\n\n@Component({\n  selector: 'app-add-experience',\n  templateUrl: './add-experience.component.html',\n  styleUrls: ['./add-experience.component.css']\n})\nexport class AddExperienceComponent implements OnInit {\n\n  public experience:Experience = {} as Experience;\n\n  constructor(private store:Store<State>) { }\n\n  ngOnInit(): void {\n  }\n\n  public submitUpdateExperience(){\n    this.store.dispatch(profileActions.addExperience({experience : this.experience}));\n  }\n\n}\n","<section class=\"p-3\">\r\n  <div class=\"container\">\r\n    <div class=\"row\">\r\n      <div class=\"col\">\r\n        <p class=\"h3 text-teal\">\r\n         <i class=\"fa fa-user-clock\"></i> Add Experience</p>\r\n        <p>Lorem ipsum dolor sit amet, consectetur adipisicing elit. Doloremque eos inventore molestiae numquam, odit quidem quod vero? Beatae cum dicta eius excepturi, exercitationem incidunt, minus nesciunt non quasi reiciendis, ullam!</p>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</section>\r\n<section class=\"mb-5\">\r\n  <div class=\"container\">\r\n    <div class=\"row\">\r\n      <div class=\"col-md-8\">\r\n        <form (submit)=\"submitUpdateExperience()\">\r\n          <div class=\"input-group mb-3\">\r\n            <div class=\"input-group-prepend\">\r\n              <span class=\"input-group-text bg-light-grey text-teal\">Title</span>\r\n            </div>\r\n            <input\r\n              name=\"title\"\r\n              [(ngModel)]=\"experience.title\"\r\n              type=\"text\" class=\"form-control\">\r\n          </div>\r\n          <div class=\"input-group mb-3\">\r\n            <div class=\"input-group-prepend\">\r\n              <span class=\"input-group-text bg-light-grey text-teal\">Company</span>\r\n            </div>\r\n            <input\r\n              name=\"company\"\r\n              [(ngModel)]=\"experience.company\"\r\n              type=\"text\" class=\"form-control\">\r\n          </div>\r\n          <div class=\"input-group mb-3\">\r\n            <div class=\"input-group-prepend\">\r\n              <span class=\"input-group-text bg-light-grey text-teal\">Location</span>\r\n            </div>\r\n            <input\r\n              name=\"location\"\r\n              [(ngModel)]=\"experience.location\"\r\n              type=\"text\" class=\"form-control\">\r\n          </div>\r\n          <div class=\"input-group mb-3\">\r\n            <div class=\"input-group-prepend\">\r\n              <span class=\"input-group-text bg-light-grey text-teal\">From</span>\r\n            </div>\r\n            <input\r\n              name=\"from\"\r\n              [(ngModel)]=\"experience.from\"\r\n              type=\"date\" class=\"form-control\">\r\n          </div>\r\n          <div>\r\n            <div class=\"form-group form-check\">\r\n              <input\r\n                name=\"current\"\r\n                [(ngModel)]=\"experience.current\"\r\n                type=\"checkbox\" class=\"form-check-input\" id=\"exampleCheck1\">\r\n              <label class=\"form-check-label\" for=\"exampleCheck1\">Current</label>\r\n            </div>\r\n          </div>\r\n          <div class=\"input-group mb-3\">\r\n            <div class=\"input-group-prepend\">\r\n              <span class=\"input-group-text bg-light-grey text-teal\">To</span>\r\n            </div>\r\n            <input\r\n              name=\"to\"\r\n              [(ngModel)]=\"experience.to\"\r\n              type=\"date\" class=\"form-control\" [disabled]=\"experience.current\">\r\n          </div>\r\n          <div class=\"input-group mb-3\">\r\n            <div class=\"input-group-prepend\">\r\n              <span class=\"input-group-text bg-light-grey text-teal\">Description</span>\r\n            </div>\r\n            <textarea\r\n              name=\"description\"\r\n              [(ngModel)]=\"experience.description\"\r\n              rows=\"3\" class=\"form-control\"></textarea>\r\n          </div>\r\n          <div>\r\n            <input type=\"submit\" class=\"btn btn-teal btn-sm\" value=\"Update\">\r\n            <a routerLink=\"/profiles/dashboard\" class=\"btn bg-light-grey btn-sm text-dark\">back</a>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</section>\r\n\r\n","import {\n  ActionReducer,\n  ActionReducerMap,\n  createFeatureSelector,\n  createSelector,\n  MetaReducer\n} from '@ngrx/store';\nimport { environment } from '../../../environments/environment';\n\nexport const stateFeatureKey = 'state';\n\nexport interface State {\n\n}\n\nexport const reducers: ActionReducerMap<State> = {\n\n};\n\n\nexport const metaReducers: MetaReducer<State>[] = !environment.production ? [] : [];\n","import { Component, OnInit } from '@angular/core';\nimport * as profileActions from '../../actions/profile.actions';\nimport * as profileReducer from '../../reducers/profile.reducer';\nimport {IProfile, Social} from \"../../models/IProfile\";\nimport {select, Store} from \"@ngrx/store\";\nimport {State} from \"../../../reducers\";\n\n@Component({\n  selector: 'app-edit-profile',\n  templateUrl: './edit-profile.component.html',\n  styleUrls: ['./edit-profile.component.css']\n})\nexport class EditProfileComponent implements OnInit {\n\n  public profile:IProfile = {} as IProfile;\n  public social:Social = {} as Social;\n  public loading:boolean = true;\n  constructor(private store:Store<State>) { }\n\n  ngOnInit(): void {\n    this.store.dispatch(profileActions.loadProfile());\n    this.store.pipe(select(profileReducer.profileFeatureKey)).subscribe((state) => {\n      this.profile = state.profile;\n      this.social = this.profile.social;\n      this.loading = state.loading;\n    });\n  }\n\n  public hasProfile(){\n    return Object.keys(this.profile).length > 0;\n  }\n\n  public changeProfile(event){\n    this.profile = {\n      ...this.profile,\n      [event.target.name] : event.target.value\n    }\n  }\n\n  public changeProfileSocial(event){\n    this.social = {\n      ...this.social,\n      [event.target.name] : event.target.value\n    };\n  }\n\n  public submitUpdateProfile(){\n    let profile:IProfile = {\n      ...this.profile,\n      ...this.social\n    };\n    this.store.dispatch(profileActions.updateProfile({profile : profile}));\n  }\n\n}\n","<section class=\"p-3\">\n  <div class=\"container\">\n    <div class=\"row\">\n      <div class=\"col\">\n        <p class=\"h2 text-teal\">\n         <i class=\"fa fa-user-circle\"></i> Edit Profile</p>\n        <p>Lorem ipsum dolor sit amet, consectetur adipisicing elit. Aliquam architecto dolorem eos explicabo numquam placeat rem. Aliquid ducimus in neque quos repellendus ullam? Adipisci aliquid beatae illum maxime quisquam sunt.</p>\n      </div>\n    </div>\n  </div>\n</section>\n<!--<pre>{{profile | json}}</pre>-->\n<section class=\"\" *ngIf=\"hasProfile()\">\n  <div class=\"container\">\n    <div class=\"row\">\n      <div class=\"col-md-8\">\n        <form (submit)=\"submitUpdateProfile()\">\n          <div class=\"form-group\">\n            <input\n              name=\"company\"\n              [value]=\"profile.company\"\n              (input)=\"changeProfile($event)\"\n              type=\"text\" class=\"form-control\" placeholder=\"Company\">\n          </div>\n          <div class=\"form-group\">\n            <input\n              name=\"website\"\n              [value]=\"profile.website\"\n              (input)=\"changeProfile($event)\"\n              type=\"text\" class=\"form-control\" placeholder=\"Website\">\n          </div>\n          <div class=\"form-group\">\n            <input\n              name=\"location\"\n              [value]=\"profile.location\"\n              (input)=\"changeProfile($event)\"\n              type=\"text\" class=\"form-control\" placeholder=\"Location\">\n          </div>\n          <div class=\"form-group\">\n            <select\n              name=\"designation\"\n              [value]=\"profile.designation\"\n              (input)=\"changeProfile($event)\"\n              class=\"form-control\">\n              <option value=\"\">Select Your Designation</option>\n              <option value=\"Junior Developer\">Junior Developer</option>\n              <option value=\"Senior Developer\">Senior Developer</option>\n              <option value=\"Tech Lead\">Tech Lead</option>\n              <option value=\"Junior Project Manager\">Junior Project Manager</option>\n              <option value=\"Senior Project Manager\">Senior Project Manager</option>\n              <option value=\"Director\">Director</option>\n            </select>\n          </div>\n          <div class=\"form-group\">\n            <input\n              name=\"skills\"\n              [value]=\"profile.skills\"\n              (input)=\"changeProfile($event)\"\n              type=\"text\" class=\"form-control\" placeholder=\"Skills\">\n          </div>\n          <div class=\"form-group\">\n            <textarea\n              name=\"bio\"\n              [value]=\"profile.bio\"\n              (input)=\"changeProfile($event)\"\n              rows=\"3\" class=\"form-control\" placeholder=\"Biography\"></textarea>\n          </div>\n          <div class=\"form-group\">\n            <input\n              name=\"githubUsername\"\n              [value]=\"profile.githubUsername\"\n              (input)=\"changeProfile($event)\"\n              type=\"text\" class=\"form-control\" placeholder=\"Github UserName\">\n          </div>\n          <hr>\n          <small class=\"mb-2 d-block\">Social Links</small>\n          <div class=\"form-group\">\n            <input\n              name=\"facebook\"\n              [value]=\"social.facebook\"\n              (input)=\"changeProfileSocial($event)\"\n              type=\"text\" class=\"form-control\" placeholder=\"Facebook\">\n          </div>\n          <div class=\"form-group\">\n            <input\n              name=\"twitter\"\n              [value]=\"social.twitter\"\n              (input)=\"changeProfileSocial($event)\"\n              type=\"text\" class=\"form-control\" placeholder=\"Twitter\">\n          </div>\n          <div class=\"form-group\">\n            <input\n              name=\"youtube\"\n              [value]=\"social.youtube\"\n              (input)=\"changeProfileSocial($event)\"\n              type=\"text\" class=\"form-control\" placeholder=\"YouTube\">\n          </div>\n          <div class=\"form-group\">\n            <input\n              name=\"linkedin\"\n              [value]=\"social.linkedin\"\n              (input)=\"changeProfileSocial($event)\"\n              type=\"text\" class=\"form-control\" placeholder=\"Linkedin\">\n          </div>\n          <div class=\"form-group\">\n            <input\n              name=\"instagram\"\n              [value]=\"social.instagram\"\n              (input)=\"changeProfileSocial($event)\"\n              type=\"text\" class=\"form-control\" placeholder=\"Instagram\">\n          </div>\n          <div>\n            <input type=\"submit\" value=\"Update\" class=\"btn btn-teal btn-sm\">\n          </div>\n        </form>\n      </div>\n    </div>\n  </div>\n</section>\n<div style=\"margin-bottom: 150px\"></div>\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { ProfilesComponent } from './profiles.component';\nimport {DashboardComponent} from \"./components/dashboard/dashboard.component\";\nimport {EditProfileComponent} from \"./components/edit-profile/edit-profile.component\";\nimport {AddExperienceComponent} from \"./components/add-experience/add-experience.component\";\nimport {AddEducationComponent} from \"./components/add-education/add-education.component\";\nimport {CreateProfileComponent} from \"./components/create-profile/create-profile.component\";\n\nconst routes: Routes = [\n  { path: '', component: ProfilesComponent },\n  { path: 'dashboard', component: DashboardComponent },\n  { path: 'edit-profile', component: EditProfileComponent },\n  { path: 'add-experience', component: AddExperienceComponent },\n  { path: 'add-education', component: AddEducationComponent },\n  { path: 'add-profile', component: CreateProfileComponent },\n  ];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class ProfilesRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport * as userReducer from '../../../users/reducers/user.reducer';\nimport {select, Store} from \"@ngrx/store\";\nimport {State} from \"../../../reducers\";\nimport {IUser} from \"../../../users/models/IUser\";\nimport * as profileActions from '../../actions/profile.actions';\nimport * as profileReducer from '../../reducers/profile.reducer';\nimport {IProfile} from \"../../models/IProfile\";\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit {\n\n  public user:IUser = {} as IUser;\n  public profile:IProfile = {} as IProfile;\n  public loading:boolean=true;\n  constructor(private store:Store<State>) { }\n\n  ngOnInit(): void {\n    this.store.dispatch(profileActions.loadProfile());\n\n    // get userInfo from NgRX Store\n    this.store.pipe(select(userReducer.userFeatureKey)).subscribe((state) => {\n      this.user = state.user;\n    });\n\n    // get profile Info from NgRX Store\n    this.store.pipe(select(profileReducer.profileFeatureKey)).subscribe((state) => {\n      this.profile = state.profile;\n      this.loading = state.loading;\n    });\n  }\n\n  public hasProfile(){\n    return Object.keys(this.profile).length > 0;\n  }\n\n  public clickDeleteExperience(experienceId){\n    this.store.dispatch(profileActions.deleteExperience({experienceId : experienceId}));\n  }\n\n  public clickDeleteEducation(educationId){\n    this.store.dispatch(profileActions.deleteEducation({educationId : educationId}));\n  }\n}\n","<section class=\"p-3\">\n  <div class=\"container\">\n    <div class=\"row\">\n      <div class=\"col\">\n        <p class=\"h2 text-teal\">\n         <i class=\"fa fa-sitemap\"></i> Dashboard\n        </p>\n        <hr>\n        <small class=\"h4\">Welcome\n          <span class=\"font-weight-bold\">{{user?.name}}</span>\n        </small>\n        <p class=\"lead\">Software development is the process of conceiving, specifying, designing, programming, documenting, testing, and bug fixing involved in creating and maintaining applications, frameworks, or other software components. Software development involves writing and maintaining the source code, but in a broader sense, it includes all processes from the conception of the desired software through to the final manifestation of the software, typically in a planned and structured process.[1] Software development also includes research, new development, prototyping, modification, reuse, re-engineering, maintenance, or any other activities that result in software products.</p>\n        <div *ngIf=\"hasProfile()\">\n          <a routerLink=\"/profiles/edit-profile\" class=\"btn bg-light-grey text-teal btn-sm\">\n            <i class=\"fa fa-user-cog\"></i> Edit Profile</a>\n          <!-- <a routerLink=\"/profiles/add-experience\" class=\"btn bg-light-grey text-teal btn-sm\">\n            <i class=\"fa fa-address-book\"></i> Add Experience</a>\n          <a routerLink=\"/profiles/add-education\" class=\"btn bg-light-grey text-teal btn-sm\">\n            <i class=\"fa fa-graduation-cap\"></i> Add Education</a> -->\n        </div>\n        <div *ngIf=\"!hasProfile()\">\n          <small class=\"text-teal\">You haven't created a profile yet, please create one</small><br>\n          <a routerLink=\"/profiles/add-profile\" class=\"btn bg-light-grey text-teal btn-sm\">\n            <i class=\"fa fa-user-cog\"></i> Create Profile</a>\n        </div>\n      </div>\n    </div>\n  </div>\n</section>\n\n<!-- loading Spinner -->\n<div *ngIf=\"loading\">\n  <img src=\"../../../../assets/img/spinner.gif\" class=\"d-block m-auto\" alt=\"\">\n</div>\n\n<!-- Experience Details -->\n<!-- <section class=\"p-3\" *ngIf=\"hasProfile() && profile.experience.length > 0\">\n  <div class=\"container\">\n    <div class=\"row\">\n      <div class=\"col\">\n        <p class=\"h4 text-teal\">Experience Details</p>\n      </div>\n    </div>\n    <div class=\"row\">\n      <div class=\"col\">\n        <table class=\"table table-hover text-center table-striped table-info\">\n          <thead class=\"bg-teal text-white\">\n            <tr>\n              <th>Title</th>\n              <th>Company</th>\n              <th>Location</th>\n              <th>From</th>\n              <th>To</th>\n              <th>Action</th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr *ngFor=\"let exp of profile.experience\">\n              <td>{{exp.title}}</td>\n              <td>{{exp.company}}</td>\n              <td>{{exp.location}}</td>\n              <td>{{exp.from | date : 'dd-MMM-YYYY'}}</td>\n              <td>{{exp.to | date : 'dd-MMM-YYYY'}}</td>\n              <td>\n                <button (click)=\"clickDeleteExperience(exp._id)\" class=\"btn btn-danger btn-sm\">Delete</button>\n              </td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    </div>\n  </div>\n</section> -->\n\n<!-- Education Details -->\n<!-- <section class=\"p-3\" *ngIf=\"hasProfile() && profile.education.length > 0\">\n  <div class=\"container\">\n    <div class=\"row\">\n      <div class=\"col\">\n        <p class=\"h4 text-teal\">Education Details</p>\n      </div>\n    </div>\n    <div class=\"row\">\n      <div class=\"col\">\n        <table class=\"table table-hover text-center table-striped table-info\">\n          <thead class=\"bg-teal text-white\">\n          <tr>\n            <th>School</th>\n            <th>Degree</th>\n            <th>Field Of Study</th>\n            <th>From</th>\n            <th>To</th>\n            <th>Action</th>\n          </tr>\n          </thead>\n          <tbody>\n          <tr *ngFor=\"let edu of profile.education\">\n            <td>{{edu.school}}</td>\n            <td>{{edu.degree}}</td>\n            <td>{{edu.fieldOfStudy}}</td>\n            <td>{{edu.from | date : 'dd-MMM-YYYY'}}</td>\n            <td>{{edu.to | date : 'dd-MMM-YYYY'}}</td>\n            <td>\n              <button  (click)=\"clickDeleteEducation(edu._id)\" class=\"btn btn-danger btn-sm\">Delete</button>\n            </td>\n          </tr>\n          </tbody>\n        </table>\n      </div>\n    </div>\n  </div>\n</section> -->\n","import { Component, OnInit } from '@angular/core';\nimport {IProfile, Social} from \"../../models/IProfile\";\nimport {Store} from \"@ngrx/store\";\nimport {State} from \"../../../reducers\";\nimport * as profileActions from \"../../actions/profile.actions\";\n\n@Component({\n  selector: 'app-create-profile',\n  templateUrl: './create-profile.component.html',\n  styleUrls: ['./create-profile.component.css']\n})\nexport class CreateProfileComponent implements OnInit {\n\n  public profile:IProfile = {} as IProfile;\n  public social:Social = {} as Social;\n  public loading:boolean = true;\n  constructor(private store:Store<State>) { }\n\n  ngOnInit(): void {\n\n  }\n\n  public submitCreateProfile(){\n    let profile:IProfile = {\n      ...this.profile,\n      ...this.social\n    };\n    this.store.dispatch(profileActions.createProfile({profile : profile}));\n  }\n\n}\n","<section class=\"p-3\">\n  <div class=\"container\">\n    <div class=\"row\">\n      <div class=\"col\">\n        <p class=\"h2 text-teal\">\n          <i class=\"fa fa-user-circle\"></i> Create a Profile</p>\n        <p>Lorem ipsum dolor sit amet, consectetur adipisicing elit. Aliquam architecto dolorem eos explicabo numquam placeat rem. Aliquid ducimus in neque quos repellendus ullam? Adipisci aliquid beatae illum maxime quisquam sunt.</p>\n      </div>\n    </div>\n  </div>\n</section>\n<!--<pre>{{profile | json}}</pre>\n<pre>{{social | json}}</pre>-->\n<section class=\"\">\n  <div class=\"container\">\n    <div class=\"row\">\n      <div class=\"col-md-8\">\n        <form (submit)=\"submitCreateProfile()\">\n          <div class=\"form-group\">\n            <input\n              name=\"company\"\n              [(ngModel)]=\"profile.company\"\n              type=\"text\" class=\"form-control\" placeholder=\"Company\">\n          </div>\n          <div class=\"form-group\">\n            <input\n              name=\"website\"\n              [(ngModel)]=\"profile.website\"\n              type=\"text\" class=\"form-control\" placeholder=\"Website\">\n          </div>\n          <div class=\"form-group\">\n            <input\n              name=\"location\"\n              [(ngModel)]=\"profile.location\"\n              type=\"text\" class=\"form-control\" placeholder=\"Location\">\n          </div>\n          <div class=\"form-group\">\n            <select\n              name=\"designation\"\n              [(ngModel)]=\"profile.designation\"\n              class=\"form-control\">\n              <option value=\"\">Select Your Designation</option>\n              <option value=\"Junior Developer\">Junior Developer</option>\n              <option value=\"Senior Developer\">Senior Developer</option>\n              <option value=\"Tech Lead\">Tech Lead</option>\n              <option value=\"Junior Project Manager\">Junior Project Manager</option>\n              <option value=\"Senior Project Manager\">Senior Project Manager</option>\n              <option value=\"Director\">Director</option>\n            </select>\n          </div>\n          <div class=\"form-group\">\n            <input\n              name=\"skills\"\n              [(ngModel)]=\"profile.skills\"\n              type=\"text\" class=\"form-control\" placeholder=\"Skills\">\n          </div>\n          <div class=\"form-group\">\n            <textarea\n              name=\"bio\"\n              [(ngModel)]=\"profile.bio\"\n              rows=\"3\" class=\"form-control\" placeholder=\"Biography\"></textarea>\n          </div>\n          <div class=\"form-group\">\n            <input\n              name=\"githubUsername\"\n              [(ngModel)]=\"profile.githubUsername\"\n              type=\"text\" class=\"form-control\" placeholder=\"Github UserName\">\n          </div>\n          <hr>\n          <small class=\"mb-2 d-block\">Social Links</small>\n          <div class=\"form-group\">\n            <input\n              name=\"facebook\"\n              [(ngModel)]=\"social.facebook\"\n              type=\"text\" class=\"form-control\" placeholder=\"Facebook\">\n          </div>\n          <div class=\"form-group\">\n            <input\n              name=\"twitter\"\n              [(ngModel)]=\"social.twitter\"\n              type=\"text\" class=\"form-control\" placeholder=\"Twitter\">\n          </div>\n          <div class=\"form-group\">\n            <input\n              name=\"youtube\"\n              [(ngModel)]=\"social.youtube\"\n              type=\"text\" class=\"form-control\" placeholder=\"YouTube\">\n          </div>\n          <div class=\"form-group\">\n            <input\n              name=\"linkedin\"\n              [(ngModel)]=\"social.linkedin\"\n              type=\"text\" class=\"form-control\" placeholder=\"Linkedin\">\n          </div>\n          <div class=\"form-group\">\n            <input\n              name=\"instagram\"\n              [(ngModel)]=\"social.instagram\"\n              type=\"text\" class=\"form-control\" placeholder=\"Instagram\">\n          </div>\n          <div>\n            <input type=\"submit\" value=\"Create\" class=\"btn btn-teal btn-sm\">\n          </div>\n        </form>\n      </div>\n    </div>\n  </div>\n</section>\n<div style=\"margin-bottom: 150px\"></div>\n"],"sourceRoot":"webpack:///"}