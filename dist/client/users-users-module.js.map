{"version":3,"sources":["./src/app/users/reducers/index.ts","./src/app/users/users-routing.module.ts","./src/app/users/components/user-register/user-register.component.ts","./src/app/users/components/user-register/user-register.component.html","./src/app/users/components/user-login/user-login.component.ts","./src/app/users/components/user-login/user-login.component.html","./src/app/users/users.component.ts","./src/app/users/users.component.html","./src/app/users/users.module.ts"],"names":[],"mappings":"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","file":"users-users-module.js","sourcesContent":["import {\n  ActionReducer,\n  ActionReducerMap,\n  createFeatureSelector,\n  createSelector,\n  MetaReducer\n} from '@ngrx/store';\nimport { environment } from '../../../environments/environment';\n\nexport const stateFeatureKey = 'state';\n\nexport interface State {\n\n}\n\nexport const reducers: ActionReducerMap<State> = {\n\n};\n\n\nexport const metaReducers: MetaReducer<State>[] = !environment.production ? [] : [];\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { UsersComponent } from './users.component';\nimport {UserLoginComponent} from \"./components/user-login/user-login.component\";\nimport {UserRegisterComponent} from \"./components/user-register/user-register.component\";\n\nconst routes: Routes = [\n  { path: '', component: UsersComponent },\n  { path: 'login', component: UserLoginComponent },\n  { path: 'register', component: UserRegisterComponent },\n\n  ];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class UsersRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport {IUser} from \"../../models/IUser\";\nimport {Store} from \"@ngrx/store\";\nimport {State} from \"../../../reducers\";\nimport * as utilActions from '../../../root/actions/util.actions';\nimport * as userActions from '../../../users/actions/user.actions';\n\n@Component({\n  selector: 'app-user-register',\n  templateUrl: './user-register.component.html',\n  styleUrls: ['./user-register.component.css']\n})\nexport class UserRegisterComponent implements OnInit {\n\n  public user:IUser = {\n    name : '',\n    email : '',\n    password : ''\n  };\n\n  constructor(private store:Store<State>) { }\n\n  ngOnInit(): void {\n  }\n\n  public submitRegister(){\n    let {name , email , password} = this.user;\n    if(name !== '' && email !== '' && password !== ''){\n      this.store.dispatch(userActions.registerUser({user : this.user}));\n    }\n    else{\n      this.store.dispatch(utilActions.setAlertUtils({message : 'Please Fill in the Fields' , color : 'danger'}));\n    }\n  }\n\n}\n","<section class=\"p-3\">\n  <div class=\"container  animated zoomIn\">\n    <div class=\"row\">\n      <div class=\"col\">\n        <h2 class=\"text-teal\">\n          <i class=\"fa fa-user-shield\"></i> Register</h2>\n        <p>Join me and my friends on this great application!</p>\n      </div>\n    </div>\n  </div>\n</section>\n<section>\n  <div class=\"container  animated zoomIn\">\n    <div class=\"row\">\n      <div class=\"col-md-8\">\n        <form (submit)=\"submitRegister()\" #registrationForm=\"ngForm\">\n          <div class=\"form-group\">\n            <input\n              #username=\"ngModel\"\n              name=\"name\"\n              [(ngModel)]=\"user.name\"\n              [class.is-invalid]=\"username.touched && username.invalid\"\n              [class.is-valid]=\"username.touched && username.valid\"\n              type=\"text\" class=\"form-control\" placeholder=\"Name\"\n            required pattern=\"^[a-zA-Z0-9_]{4,16}$\">\n            <small class=\"text-danger\" *ngIf=\"username.touched && username.invalid\">Enter a Proper Name</small>\n            <small class=\"text-success\" *ngIf=\"username.touched && username.valid\">Looks Good</small>\n          </div>\n          <div class=\"form-group\">\n            <input\n              #email=\"ngModel\"\n              name=\"email\"\n              [(ngModel)]=\"user.email\"\n              [class.is-invalid]=\"email.touched && email.invalid\"\n              [class.is-valid]=\"email.touched && email.valid\"\n              type=\"email\" class=\"form-control\" placeholder=\"Email\"\n              required pattern=\"^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$\">\n            <small class=\"text-danger\" *ngIf=\"email.touched && email.invalid\">Enter a Proper Email</small>\n            <small class=\"text-success\" *ngIf=\"email.touched && email.valid\">Looks Good</small>\n          </div>\n          <div class=\"form-group\">\n            <input\n              #password=\"ngModel\"\n              name=\"password\"\n              [(ngModel)]=\"user.password\"\n              [class.is-invalid]=\"password.touched && password.invalid\"\n              [class.is-valid]=\"password.touched && password.valid\"\n              type=\"password\" class=\"form-control\" placeholder=\"Password\"\n            required pattern=\"^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{6,20}$\">\n            <small class=\"text-danger\" *ngIf=\"password.touched && password.invalid\">Enter a Proper Password</small>\n            <small class=\"text-success\" *ngIf=\"password.touched && password.valid\">Looks Good</small>\n          </div>\n          <div>\n            <input type=\"submit\" value=\"Register\" class=\"btn btn-teal btn-sm\">\n          </div>\n        </form>\n        <small>\n          Already have an account ?\n          <a routerLink=\"/users/login\" class=\"font-weight-bold text-teal\">Login</a>\n        </small>\n      </div>\n    </div>\n  </div>\n</section>\n","import { Component, OnInit } from '@angular/core';\nimport {IUser} from \"../../models/IUser\";\nimport {Store} from \"@ngrx/store\";\nimport {State} from \"../../../reducers\";\nimport * as utilActions from '../../../root/actions/util.actions';\nimport * as userActions from '../../../users/actions/user.actions';\n\n@Component({\n  selector: 'app-user-login',\n  templateUrl: './user-login.component.html',\n  styleUrls: ['./user-login.component.css']\n})\nexport class UserLoginComponent implements OnInit {\n\n  public user:IUser = {\n    name : '',\n    email : '',\n    password : ''\n  };\n\n  constructor(private store:Store<State>) { }\n\n  ngOnInit(): void {\n  }\n\n  public submitLogin(){\n    let {email , password} = this.user;\n    if(email !== '' && password !== ''){\n      this.store.dispatch(userActions.loginUser({user : this.user}));\n    }\n    else{\n      this.store.dispatch(utilActions.setAlertUtils({message : 'Please Fill in the Fields' , color : 'danger'}));\n    }\n  }\n}\n","<section class=\"p-3\">\n  <div class=\"container animated zoomIn\">\n    <div class=\"row\">\n      <div class=\"col\">\n        <h2 class=\"text-teal\">\n         <i class=\"fa fa-sign-in-alt\"></i> Login</h2>\n        <p>Login to this awesome application!</p>\n      </div>\n    </div>\n  </div>\n</section>\n<section>\n  <div class=\"container  animated zoomIn\">\n    <div class=\"row\">\n      <div class=\"col-md-8\">\n        <form (submit)=\"submitLogin()\" #loginForm=\"ngForm\">\n          <div class=\"form-group\">\n            <input\n              #email=\"ngModel\"\n              name=\"email\"\n              [(ngModel)]=\"user.email\"\n              [class.is-invalid]=\"email.touched && email.invalid\"\n              [class.is-valid]=\"email.touched && email.valid\"\n              type=\"email\" class=\"form-control\" placeholder=\"Email\"\n              required pattern=\"^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$\">\n            <small class=\"text-danger\" *ngIf=\"email.touched && email.invalid\">Enter a Proper Email</small>\n            <small class=\"text-success\" *ngIf=\"email.touched && email.valid\">Looks Good</small>\n          </div>\n          <div class=\"form-group\">\n            <input\n              #password=\"ngModel\"\n              name=\"password\"\n              [(ngModel)]=\"user.password\"\n              [class.is-invalid]=\"password.touched && password.invalid\"\n              [class.is-valid]=\"password.touched && password.valid\"\n              type=\"password\" class=\"form-control\" placeholder=\"Password\"\n              required pattern=\"^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{6,20}$\">\n            <small class=\"text-danger\" *ngIf=\"password.touched && password.invalid\">Enter a Proper Password</small>\n            <small class=\"text-success\" *ngIf=\"password.touched && password.valid\">Looks Good</small>\n          </div>\n          <div>\n            <input type=\"submit\" value=\"Login\" class=\"btn btn-teal btn-sm\">\n          </div>\n        </form>\n        <small>\n          Don't have an account ?\n          <a routerLink=\"/users/register\" class=\"font-weight-bold text-teal\">Register</a>\n        </small>\n      </div>\n    </div>\n  </div>\n</section>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-users',\n  templateUrl: './users.component.html',\n  styleUrls: ['./users.component.css']\n})\nexport class UsersComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>users works!</p>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from \"@angular/forms\";\nimport { UsersRoutingModule } from './users-routing.module';\nimport { UsersComponent } from './users.component';\nimport { UserLoginComponent } from './components/user-login/user-login.component';\nimport { UserRegisterComponent } from './components/user-register/user-register.component';\nimport { StoreModule } from '@ngrx/store';\nimport * as fromState from './reducers';\nimport { EffectsModule } from '@ngrx/effects';\nimport { UserEffects } from './effects/user.effects';\nimport { HttpClientModule } from \"@angular/common/http\";\n\n@NgModule({\n  declarations: [UsersComponent, UserLoginComponent, UserRegisterComponent],\n  imports: [\n    CommonModule,\n    FormsModule,\n    HttpClientModule,\n    UsersRoutingModule,\n    StoreModule.forFeature(fromState.stateFeatureKey, fromState.reducers, { metaReducers: fromState.metaReducers }),\n    EffectsModule.forFeature([UserEffects])\n  ]\n})\nexport class UsersModule { }\n"],"sourceRoot":"webpack:///"}